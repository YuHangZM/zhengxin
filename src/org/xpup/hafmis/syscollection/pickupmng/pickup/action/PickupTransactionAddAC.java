/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.syscollection.pickupmng.pickup.action;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.actions.LookupDispatchAction;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.Pagination;
import org.xpup.hafmis.common.util.BusiConst;
import org.xpup.hafmis.common.util.BusiTools;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.syscollection.common.domain.entity.SpecialPick;
import org.xpup.hafmis.syscollection.pickupmng.pickup.bsinterface.IPickupBS;
import org.xpup.hafmis.syscollection.pickupmng.pickup.form.PickConvertAF;
import org.xpup.hafmis.syscollection.pickupmng.pickup.form.PickGetEmployeeInfoAF;
import org.xpup.hafmis.syscollection.pickupmng.pickup.form.PickupAddAF;
import org.xpup.hafmis.syscollection.pickupmng.pickup.form.PickupGetCompanyIdAF;
public class PickupTransactionAddAC extends LookupDispatchAction {
  protected Map getKeyMethodMap() {
    Map map = new HashMap();
    map.put("button.sure", "submit");
    map.put("button.back", "back");
    map.put("button.pickup.infor", "pick");
    map.put("button.repayment", "giveMoney");
    return map;
  }
	public ActionForward submit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
    ActionMessages messages = new ActionMessages();
    PickupAddAF addAF = (PickupAddAF)form;
    try{
      PickGetEmployeeInfoAF pickGetEmployeeInfoAF=(PickGetEmployeeInfoAF)request.getSession().getAttribute("display");
      //取id
      String orgId = request.getSession().getAttribute("orgId").toString();
      String empId = ((PickGetEmployeeInfoAF)request.getSession().getAttribute("display")).getEmpId();
      IPickupBS pbs = (IPickupBS)BSUtils.getBusinessService("pickupBS",this,mapping.getModuleConfig());
      String noteNumber = (String)request.getSession().getAttribute("noteNumber");
      String other_card_num = (String)request.getSession().getAttribute("other_card_num");
      String str = null;
      if(noteNumber != null && !noteNumber.equals(""))//判断是否有票据编号
        addAF.setNoteNumber(noteNumber);
      if(other_card_num != null && !other_card_num.equals(""))//判断是否有票据编号
        addAF.setOther_card_num(other_card_num);
      
      addAF.setOrgId(orgId);
      addAF.setEmpId(empId);
      SpecialPick sp = (SpecialPick)request.getSession().getAttribute("special");
//    获得IP...就是这样的固定写法
      SecurityInfo sInfo = (SecurityInfo)request.getSession().getAttribute("SecurityInfo");
      String ip = sInfo.getUserIp();
      pbs.savePickup(addAF,pickGetEmployeeInfoAF,sp,ip,sInfo.getUserName(),sInfo.getUserInfo().getBizDate());
      request.getSession().removeAttribute("display");
      request.getSession().removeAttribute("special");
      request.getSession().removeAttribute("distoryPick");
      request.getSession().setAttribute("display", new PickGetEmployeeInfoAF());
      request.getSession().setAttribute("addpage", "three");
      PickConvertAF convert = new PickConvertAF();
      convert.setPickupType(BusiTools.listBusiProperty(BusiConst.PICKUPTYPE));
      convert.setSomeList(BusiTools.listBusiProperty(BusiConst.SOMEPICK));
      convert.setDistoryList(BusiTools.listBusiProperty(BusiConst.DISTROYPICK));
      request.getSession().setAttribute("pickup", convert);
      request.getSession().setAttribute("somePick", "some");
      request.setAttribute("result", new PickupAddAF());
//      System.out.println("+++++++++++++++为了跳到新的页面而准备的++++++++++++++++");
      return mapping.findForward("add");
      
    }catch (BusinessException bex) {
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(bex.getLocalizedMessage(),
          false));
      saveErrors(request, messages);
      PickConvertAF convert = new PickConvertAF();
      try {
        convert.setPickupType(BusiTools.listBusiProperty(BusiConst.PICKUPTYPE));
        convert.setSomeList(BusiTools.listBusiProperty(BusiConst.SOMEPICK));
        convert.setDistoryList(BusiTools.listBusiProperty(BusiConst.DISTROYPICK));
      } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
      }
      request.getSession().setAttribute("pickup", convert);
      request.getSession().setAttribute("somePick", "some");
      request.setAttribute("result", addAF);
    }catch(Exception s){
      s.printStackTrace();
    }
    return mapping.findForward("add");
	}
  public ActionForward back(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
//    System.out.println("返回");
    Pagination paginaction = (Pagination)request.getSession().getAttribute(PickupShowAC.PAGINACTION_KEY);
//    System.out.println("返回方法中的id-->"+(String)paginaction.getQueryCriterions().get("idValue"));
    return new ActionForward("/pickupShowAC.do");
  }
  public ActionForward pick(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
//    System.out.println("...........提取情况............");
    //这个功能直接是跳到另外的一个Action里面..利用的的是window.open然后return false;
    return null;
//    return new ActionForward("/employee_pick_info.jsp");
  }
  public ActionForward giveMoney(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    PickupGetCompanyIdAF pickupGetCompanyIdAF = (PickupGetCompanyIdAF) form; 
//    System.out.println("还钱");
    return null;
  }
}