/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.syscollection.pickupmng.pickup.action;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.Pagination;
import org.xpup.common.util.PaginationUtils;
import org.xpup.hafmis.common.util.BusiConst;
import org.xpup.hafmis.common.util.BusiTools;
import org.xpup.hafmis.syscollection.common.domain.entity.PickTail;
import org.xpup.hafmis.syscollection.pickupmng.pickup.bsinterface.IPickupBS;
import org.xpup.hafmis.syscollection.pickupmng.pickup.form.EmployeePickInfoAF;

/** 
 * MyEclipse Struts
 * Creation date: 07-17-2007
 * 
 * XDoclet definition:
 * @struts.action parameter="method" validate="true"
 */
public class PageSkipAC extends Action {
  public static final String PAGINATION_KEY = "org.xpup.hafmis.syscollection.pickupmng.pickup.action.PageSkipAC";
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
    try{
//      System.out.println("终于把你找到了");
//      System.out.println("经过Action......");
      String empId = (String)request.getParameter("empId");
      Pagination pagination = null;
      EmployeePickInfoAF af = new EmployeePickInfoAF();
      EmployeePickInfoAF select = (EmployeePickInfoAF)form;
      IPickupBS pbs = (IPickupBS)BSUtils.getBusinessService("pickupBS",this,mapping.getModuleConfig());
      if(select.getPickTime()!=null || select.getPickReason()!=null){//是有条件的选择...这里面的empId一定是存在的
//        System.out.println("进入了有条件的选择........");
        pagination = (Pagination)request.getSession().getAttribute(PAGINATION_KEY);
        String getSaveEmpId = pagination.getQueryCriterions().get("empId").toString();//取出此职工id...
        request.getSession().removeAttribute(PAGINATION_KEY);//移除这个pagination..
        pagination = getPagination(PAGINATION_KEY, request, getSaveEmpId);
        //从新获得这pagination..如果不重新获得..那么这个Pagination里面的分页的变量都会一直保持着...这样会出现错误
        if(select.getPickTime().trim()!=null)
        pagination.getQueryCriterions().put("time", select.getPickTime().trim());
        pagination.getQueryCriterions().put("reason", select.getCheckReason());
        af = (EmployeePickInfoAF)request.getSession().getAttribute("employeeInfo");
      }else if (empId!=null){//第一次进入系统..或是选择了新的职工编号.
//        System.out.println("恭喜你　刚刚进入系统");
        request.getSession().removeAttribute(PAGINATION_KEY);
        pagination = getPagination(PAGINATION_KEY, request,empId);
      }
      //获得Session中的pagination..
      pagination = (Pagination)request.getSession().getAttribute(PAGINATION_KEY);
      PaginationUtils.updatePagination(pagination, request);//进行分页
      List list = pbs.getEmployeePickCountMoney(pagination);
      if(list!=null && list.size()>0){//如果存在数据...累加金额
        Iterator it = list.iterator();
        double ba = 0.00;//累加金额
        double in = 0.00;//累加利息
        double total = 0.00;//累加利息和金钱额
        while(it.hasNext()){
          PickTail t = (PickTail)it.next();
          ba = ba + t.getPickSalary().doubleValue();
          in = in+t.getPickInterest().doubleValue();
          total = total + t.getTotal().doubleValue();
          //转换提取原因
        }
        af.setPickBalance(new BigDecimal(ba));
        af.setPickInterest(new BigDecimal(in).setScale(2, BigDecimal.ROUND_HALF_UP));
        af.setPickTotal(new BigDecimal(total).setScale(2, BigDecimal.ROUND_HALF_UP));
      }
      Map reason = BusiTools.listBusiProperty(BusiConst.SOMEPICK);//部分提取
      Map all = BusiTools.listBusiProperty(BusiConst.DISTROYPICK);//销户提取
      Map map = new HashMap();
      /**把两个Map合并成一个Map..因为此Map一定不能为null..所以不用判断(这个地方应该给它封状成一个方法)**/
      Iterator re = reason.entrySet().iterator();
      while(re.hasNext()){
        Map.Entry entry = (Map.Entry)re.next();
        map.put(entry.getKey(), entry.getValue());
      }
      Iterator dis = all.entrySet().iterator();
      while(dis.hasNext()){
        Map.Entry entry = (Map.Entry)dis.next();
        map.put(entry.getKey(), entry.getValue());
      }
      af.setMap(map);//保存Map
      /**转换Map 结束**/
      List pageData = pbs.getEmployeePickInfo(pagination);//在这里是获得本页数据的一个集合
      af.setList(pageData);
      af.setCheckReason((String)pagination.getQueryCriterions().get("reason"));
      af.setPickTime((String)pagination.getQueryCriterions().get("time"));
      request.getSession().setAttribute("employeeInfo", af);//必须放在Session里...
    }catch(Exception s){
//      System.err.println("PageSkipAC has Error:"+s.getMessage());
      s.printStackTrace();
    }
    return new ActionForward("/employee_pick_info.jsp");
	}
  private Pagination getPagination(String paginationKey,
      HttpServletRequest request,String empId) {
    Pagination pagination = (Pagination) request.getSession().getAttribute(
        paginationKey);
    if (pagination == null) {//第一次进来的时候...
//      System.out.println("创建pagination......"+empId+"...........");
      pagination = new Pagination(0,10,1,"h.settDate","desc",new HashMap(0));
      pagination.getQueryCriterions().put("empId",empId);
      request.getSession().setAttribute(paginationKey, pagination);
    }
    return pagination;
  }
}