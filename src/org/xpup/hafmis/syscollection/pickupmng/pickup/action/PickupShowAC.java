/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.syscollection.pickupmng.pickup.action;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.Pagination;
import org.xpup.common.util.PaginationUtils;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.syscollection.common.domain.entity.Org;
import org.xpup.hafmis.syscollection.common.domain.entity.PickHead;
import org.xpup.hafmis.syscollection.common.domain.entity.PickTail;
import org.xpup.hafmis.syscollection.pickupmng.pickup.bsinterface.IPickupBS;
import org.xpup.hafmis.syscollection.pickupmng.pickup.dto.Convert;
import org.xpup.hafmis.syscollection.pickupmng.pickup.form.PickupGetCompanyIdAF;
import org.xpup.hafmis.syscommon.domain.entity.OrgInfo;

/**
 * @author 李文浩
 *  一个管跳转到办理提取页面的Action
 */
public class PickupShowAC extends Action {
  public static final String PAGINACTION_KEY="org.xpup.hafmis.syscollection.pickupmng.pickup.action.PickupShowAC";
  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    ActionMessages mess = new ActionMessages();
    PickupGetCompanyIdAF af = new PickupGetCompanyIdAF();
    try {
      Pagination paginaction = this.getPagination(PickupShowAC.PAGINACTION_KEY,
          request);
      PaginationUtils.updatePagination(paginaction, request);
      IPickupBS pbs = (IPickupBS) BSUtils.getBusinessService("pickupBS", this,
          mapping.getModuleConfig());
      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");// 为了加单位权限而得到的对象
      int type = securityInfo.getIsOrgEdition();
      request.setAttribute("type", type + "");
      List list = null;
      OrgInfo orgInfo = null;

      request.setAttribute("af", af);
      if (paginaction.getQueryCriterions().get("idValue") != null) {// 已经输入过编号了
        if (paginaction.getQueryCriterions().get("vindicateUpdate") != null) {
          // 从维护的修改按钮转过来的
          request.getSession().setAttribute("liwenhao",
              "formVindicateSkipToThis");
        }
        int number = Integer.parseInt(paginaction.getQueryCriterions().get(
            "idValue").toString());
        request.getSession().setAttribute("orgId", new Integer(number));
        Org org = (Org) pbs.orgFindById(number, securityInfo);// 获得单位表信息.....权限...

        if (org == null) {// 如果查找的对象不存在 提示用户---ok
          mess.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(
              "你查找的编号不存在或是权限不够", false));
          saveErrors(request, mess);
          request.getSession().removeAttribute(PAGINACTION_KEY);
          paginaction = this.getPagination(PickupShowAC.PAGINACTION_KEY,
              request);
        } else {// 如果存在此对象..我们去判断BA001里面的开户状态是否正常
          Serializable orgInfoId = org.getOrgInfo().getId();// 如果存在的话..这个就是用户输入的东西
          orgInfo = pbs.findOrgInfoStatus1(orgInfoId);
          if (orgInfo == null) {// 如果不正常的话....直接给用户信息.....以上经过测试 全部OK........
            mess.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(
                "单位处于非正常状态,暂时不能办理提取", false));
            saveErrors(request, mess);
            request.getSession().removeAttribute(PAGINACTION_KEY);
            paginaction = this.getPagination(PickupShowAC.PAGINACTION_KEY,
                request);
          }
          // 归集银行日期与业务日期不一致
          System.out.println("id----" + org.getId().toString().substring(2, 3));
          String bankdate = pbs.findAA103_DayTime(org.getOrgInfo()
              .getCollectionBankId());
          System.out.println("--------bankdate=" + bankdate + "------date="
              + securityInfo.getUserInfo().getBizDate().toString());
          if (!securityInfo.getUserInfo().getBizDate().toString().equals(
              bankdate)) {
            mess.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(
                "归集银行日期与业务日期不一致.", false));
            saveErrors(request, mess);
            request.getSession().removeAttribute(PAGINACTION_KEY);
            paginaction = this.getPagination(PickupShowAC.PAGINACTION_KEY,
                request);
          }

          else {// BA001的状态为2或是是状态为正常的情况下 执行此语句块．．判断AA306的状态是否为1
            // 加入结算日期.
            String o = pbs.queryNoteNum();
            // System.out.println("securityInfo.getBizDate().toString()+o="+securityInfo.getUserInfo().getBizDate().toString()+o);
            af.setNoteNumber(securityInfo.getUserInfo().getBizDate().toString()
                + o);

            PickHead p = pbs.findPickHeadOrgIdStatusIsOne(number);// 如果存在记录为1
            af.setId("0" + number);// 保存值 在返回的时候 让值在页面上显示。。。
            // System.out.println("setid======"+af.getId());
            af.setName(orgInfo.getName());// 保存值 在返回的时候 让值在页面上显示。。。
            if (p == null) {// 判断该单位编号下是否存在AA306~PICK_SATATUS=1的记录
              af.setId("0" + number);
              af.setName(org.getOrgInfo().getName());// 如果存在...
              request.setAttribute("af", af);
              if (pbs.findStatusNotIsFive(number) != null) {// 判断判断该单位编号下是否存在AA306~PICK_SATATUS!=5的记录
                request.setAttribute("result", "notisfive");
                paginaction = this.getPagination(PickupShowAC.PAGINACTION_KEY,
                    request);
                af.setButtonState("状态!=5显示按钮");
                return mapping.findForward("show");
              } else {// 判断AA308的is_pick是否为1
                if (pbs.findSpecialPickByOrgId(number) == null) {// 状态不等于1
                  request.setAttribute("result", "success");
                  paginaction = this.getPagination(
                      PickupShowAC.PAGINACTION_KEY, request);
                  af.setButtonState("不是特殊提取");
                  return mapping.findForward("show");
                } else {
                  af.setButtonState("状态!=5显示按钮");
                  request.setAttribute("result", "notisfive");
                  paginaction = this.getPagination(
                      PickupShowAC.PAGINACTION_KEY, request);
                  return mapping.findForward("show");
                }
              }
            } else {
              af.setNoteNumber(p.getNoteNum());// 把票据编号显示在浏览器上
              request.setAttribute("result", "ok");
              af.setButtonState("显示");
              list = pbs.findFirstPageData(paginaction);// 获得查询到的数据---权限----显示用的
              String id = (String) paginaction.getQueryCriterions().get(
                  "idValue");
              List l = pbs.getFirstPageCount(id);
              count(l, af);
              af.setList(list);
              af.setNoteNumber(p.getNoteNum());
              af.setId("0" + number);
              af.setName(orgInfo.getName());
              // 存版本类型
              af.setVersionflag(pbs.findversionflag(paginaction, p,
                  securityInfo));

              request.setAttribute("af", af);
              return mapping.findForward("show");
            }
          }
        }
      }
      af.setCounts(paginaction.getNrOfElements() + "");
    } catch (BusinessException s) {
      s.printStackTrace();
    } catch (Exception s) {
      s.printStackTrace();
    }
    request.setAttribute("af", af);
    return mapping.findForward("show");
  }
  private Pagination getPagination(String paginationKey,HttpServletRequest request) {
    Pagination pagination = (Pagination) request.getSession().getAttribute(paginationKey);
    if (pagination == null) {
      pagination = new Pagination(0, 10, 1, "pt.id","ASC",new HashMap(0));
      request.getSession().setAttribute(paginationKey, pagination);
    }   
    return pagination;
  }
  private void count(List list,PickupGetCompanyIdAF af){
    int somePick = 0;
    int distoryPick = 0;
    BigDecimal sumBalance = new BigDecimal(0);
    BigDecimal sumInterest = new BigDecimal(0);
    if(list.isEmpty()){
      af.setSomePickupNumber(0);
      af.setDistoryPickupNumber(0);
      af.setSumPerson(0);
      af.setSumBalance(new BigDecimal(0));
      af.setSumInterese(new BigDecimal(0));
      af.setSumTotal(new BigDecimal(0));
    }else{
      Iterator it = list.iterator();
      while(it.hasNext()){
        PickTail t = (PickTail)it.next();
        int type  = t.getPickType().intValue();
        if(type ==1)
          somePick++;
        else if(type==2)
          distoryPick++;
        BigDecimal b1 = t.getPickCurBalance();
        BigDecimal b2 = t.getPickPreBalance();
        BigDecimal bb = b1.add(b2);
        sumBalance = sumBalance.add(bb);
        BigDecimal i1 = t.getPickPreInterest();
        BigDecimal i2 = t.getPickCurInterest();
        BigDecimal ii = i1.add(i2);
        sumInterest = sumInterest.add(ii);
      }
      af.setSomePickupNumber(somePick);
      af.setDistoryPickupNumber(distoryPick);
      af.setSumPerson(somePick+distoryPick);
      af.setSumBalance(sumBalance);
      af.setSumInterese(sumInterest);
      af.setSumTotal(sumBalance.add(sumInterest));
    }
  }
}















