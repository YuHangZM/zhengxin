/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.syscollection.pickupmng.pickup.action;

import java.io.File;
import java.io.InputStream;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.upload.FormFile;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.Pagination;
import org.xpup.common.util.imp.Factory;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.syscollection.pickupmng.pickup.bsinterface.IPickupBS;
import org.xpup.hafmis.syscollection.pickupmng.pickup.form.PickImportAF;

/** 
 * MyEclipse Struts
 * Creation date: 07-13-2007
 * 李文浩...上传文件的Action
 * XDoclet definition:
 * @struts.action path="/pickImportAC" name="pickImportAF" scope="request" validate="true"
 */
public class PickImportAC extends Action {
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
    ActionMessages messages = null;
    try{
      String notenumber="";
      String other_card_num="";
      PickImportAF pickImportAF = (PickImportAF) form;// TODO Auto-generated method stub
      FormFile file = pickImportAF.getTheFile();//获得上传的这个文件
      String fileType = file.getFileName().substring(file.getFileName().lastIndexOf(".") + 1);//获得文件类型
      if(!fileType.equals("xls")){
        //文件不是xls格式/
        messages = new ActionMessages();
        messages.add(messages.GLOBAL_MESSAGE,new ActionMessage("导入失败-你导入的不是xls格式的文件",false));
        saveErrors(request, messages);
        return new ActionForward("/pick_import.jsp");
      }
      ServletContext context = request.getSession().getServletContext();//获得Servlet上下文..也就是Application
      String xmlPath = context.getRealPath("/impXml/"+ "pickup_imp.xml");//获得模版的路径
      //获得此文件的引用...geturl是代表这个文件的绝对路径(在这个地方可以判断此文件为NULL)
      //这句话只是可以判断这个文件在硬盘下边是否存在
//      File files=new File(pickImportAF.getUrl());
      Factory factory = new Factory();
      File xmlFile = new File(xmlPath);
      InputStream stream = file.getInputStream();
      Map info = null;
      IPickupBS pbs = (IPickupBS)BSUtils.getBusinessService("pickupBS",this,mapping.getModuleConfig());
      //这个地方必须用Map集合来接收..不然会出现..数组下标越界而不是NollPointExeprion
      info=factory.getInfomation(xmlFile, stream, "org.xpup.hafmis.syscollection.pickupmng.pickup.dto.");
      List headList = (List)info.get("PickHeadImport");//获得头表的数据===此key值和xml name的值一样
      List tailList = (List)info.get("PickTailImport");//获得尾表的数据
      //获得IP...就是这样的固定写法
      SecurityInfo sInfo = (SecurityInfo)request.getSession().getAttribute("SecurityInfo");
//      if(sInfo == null)
//        System.out.println("-----------SecurityInfo->null");
      String ip = sInfo.getUserIp();
      //为了跳转能够显示数据
      
      notenumber=(String)request.getSession().getAttribute("noteNumber");
      other_card_num=(String)request.getSession().getAttribute("other_card_num");
      
      String orgId = pbs.getBatchErrorData(headList, tailList,sInfo,notenumber,other_card_num);
      Pagination pag = (Pagination)request.getSession().getAttribute(PickupShowAC.PAGINACTION_KEY);
      pag.getQueryCriterions().put("idValue", orgId);
    }catch(BusinessException s){
      messages=new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("导入失败！"+s.getMessage(),
          false));
      saveErrors(request, messages);
  //    s.printStackTrace();
    }catch(Exception s){
     s.printStackTrace();
      messages=new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("导入失败！",
          false));
      saveErrors(request, messages);
    }
		return new ActionForward("/pickupShowAC.do");
	}
}




















