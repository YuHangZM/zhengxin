/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.syscollection.collloanbackcheck.action;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.actions.LookupDispatchAction;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.Pagination;
import org.xpup.common.util.PaginationUtils;
import org.xpup.hafmis.common.form.IdAF;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.syscollection.accounthandle.bizcheck.bsinterface.IBizcheckBS;
import org.xpup.hafmis.syscollection.accounthandle.clearaccount.bsinterface.IclearAccountBS;
import org.xpup.hafmis.syscollection.chgbiz.chgperson.bsinterface.IChgpersonDoBS;
import org.xpup.hafmis.syscollection.collloanbackcheck.bsinterface.ICollLoanbackcheckBS;
import org.xpup.hafmis.syscollection.common.domain.entity.OrgHAFAccountFlow;
import org.xpup.hafmis.syscollection.systemmaintain.loanpara.bsinterface.ILoanDocNumDesignBS;

public class CollLoanbackcheckMainTainAC extends LookupDispatchAction {
  public static final String PAGINATION_KEY = "org.xpup.hafmis.syscollection.collloanbackcheck.action.CollLoanbackcheckShowAC";

  protected Map getKeyMethodMap() {
    Map map = new HashMap();
    map.put("button.check.through", "checkthrough");
    map.put("button.checkall", "checkall");
    map.put("button.del.check", "delcheck");
    map.put("button.del.checkall", "delcheckall");
    map.put("button.print", "print");
    map.put("button.in.account", "account");
    return map;
  }

  public ActionForward account(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws Exception {
    ActionMessages messages = null;
    try {
      IdAF idAF = (IdAF) form;
      String id = (String) idAF.getId();
      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");
      System.out.println("id..." + id);
      ICollLoanbackcheckBS collLoanbackcheckBS = (ICollLoanbackcheckBS) BSUtils
          .getBusinessService("collLoanbackcheckBS", this, mapping
              .getModuleConfig());
      IclearAccountBS clearaccountBS = (IclearAccountBS) BSUtils
          .getBusinessService("clearaccountBS", this, mapping.getModuleConfig());

      String rowArray[] = collLoanbackcheckBS.clearaccount(id, securityInfo);
      System.out.println("d..." + rowArray.length);
      Pagination pagination = getPagination(PAGINATION_KEY, request);
      PaginationUtils.updatePagination(pagination, request);
      String bizDate = securityInfo.getUserInfo().getBizDate();
      String ip = securityInfo.getUserInfo().getUserIp();
      String officeid = "";
      String oper = securityInfo.getUserInfo().getUsername();
      clearaccountBS.dealwithClearAccount(rowArray, bizDate, oper, ip,
          officeid, pagination, "2", securityInfo);
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("扎账完成！",
          false));
      saveErrors(request, messages);
    } catch (BusinessException bex) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(bex
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    }
    HttpSession session = request.getSession();
    session.setAttribute("flag", "2");
    return mapping.findForward("collLoanbackcheckList");
  }

  public ActionForward print(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws Exception {
    ILoanDocNumDesignBS loanDocNumDesignBS = (ILoanDocNumDesignBS) BSUtils
        .getBusinessService("loanDocNumDesignBS", this, mapping
            .getModuleConfig());
    String userName = "";
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");
    try {
      String name = loanDocNumDesignBS.getNamePara();

      if (name.equals("1")) {
        userName = securityInfo.getUserName();
      } else {
        userName = securityInfo.getRealName();
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
    String bizDate = securityInfo.getUserInfo().getBizDate();

    request.setAttribute("bizDate", bizDate.substring(0, 4) + "年"
        + bizDate.substring(4, 6) + "月"
        + bizDate.substring(6, bizDate.length()) + "日");
    request.setAttribute("userName", userName);
    return mapping.findForward("print");
  }

  public ActionForward checkthrough(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws Exception {
    ActionMessages messages = null;
    try {
      IdAF idAF = (IdAF) form;
      String id = (String) idAF.getId();
      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");

      ICollLoanbackcheckBS collLoanbackcheckBS = (ICollLoanbackcheckBS) BSUtils
          .getBusinessService("collLoanbackcheckBS", this, mapping
              .getModuleConfig());

      collLoanbackcheckBS.bizcheck(id, securityInfo);
    } catch (BusinessException bex) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(bex
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    }
    HttpSession session = request.getSession();
    session.setAttribute("flag", "1");
    return mapping.findForward("collLoanbackcheckList");
  }

  public ActionForward checkall(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws Exception {
    ActionMessages messages = null;
    try {
      HttpSession session = request.getSession();
      List list = (List) session.getAttribute("checkList");

      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");

      ICollLoanbackcheckBS collLoanbackcheckBS = (ICollLoanbackcheckBS) BSUtils
          .getBusinessService("collLoanbackcheckBS", this, mapping
              .getModuleConfig());

      collLoanbackcheckBS.bizcheckAll(list, securityInfo);

    } catch (BusinessException bex) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(bex
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    }
    HttpSession session = request.getSession();
    session.setAttribute("flag", "1");
    return mapping.findForward("collLoanbackcheckList");

  }

  public ActionForward delcheck(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws Exception {
    ActionMessages messages = null;
    try {
      // 批次号
      IdAF idAF = (IdAF) form;
      String id = (String) idAF.getId();

      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");

      ICollLoanbackcheckBS collLoanbackcheckBS = (ICollLoanbackcheckBS) BSUtils
          .getBusinessService("collLoanbackcheckBS", this, mapping
              .getModuleConfig());

      collLoanbackcheckBS.delbizcheck(id, securityInfo);

    } catch (BusinessException bex) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(bex
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    }
    HttpSession session = request.getSession();
    session.setAttribute("flag", "1");
    return mapping.findForward("collLoanbackcheckList");
  }

  public ActionForward delcheckall(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws Exception {
    ActionMessages messages = null;
    try {
      HttpSession session = request.getSession();
      List list = (List) session.getAttribute("checkList");

      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");

      ICollLoanbackcheckBS collLoanbackcheckBS = (ICollLoanbackcheckBS) BSUtils
          .getBusinessService("collLoanbackcheckBS", this, mapping
              .getModuleConfig());

      collLoanbackcheckBS.delbizcheckAll(list, securityInfo);

    } catch (BusinessException bex) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(bex
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    }
    HttpSession session = request.getSession();
    session.setAttribute("flag", "1");
    return mapping.findForward("collLoanbackcheckList");
  }

  private Pagination getPagination(String paginationKey,
      HttpServletRequest request) {
    Pagination pagination = (Pagination) request.getSession().getAttribute(
        paginationKey);
    if (pagination == null) {
      pagination = new Pagination(0, 10, 1, "aa306.BATCH_NUM", "DESC",
          new HashMap(0));
      request.getSession().setAttribute(paginationKey, pagination);
    }

    return pagination;
  }
}