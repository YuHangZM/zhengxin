/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.syscollection.paymng.orgaddpay.action;
        
import java.io.File;
import java.io.InputStream;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.upload.FormFile;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.Pagination;
import org.xpup.common.util.imp.Factory;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.syscollection.paymng.orgaddpay.bsinterface.IOrgaddpayBS;
import org.xpup.hafmis.syscollection.paymng.orgaddpay.form.OrgaddpayImportTaAF;
import org.xpup.hafmis.syscollection.paymng.orgaddpay.form.OrgaddpayTaAF;

/** 
 * MyEclipse Struts
 * Creation date: 04-11-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class OrgaddpayTaImportAC extends Action {
  /*
   * Generated Methods
   */
  

  /** 
   * Method execute
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return ActionForward
   */
  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    OrgaddpayImportTaAF forms = (OrgaddpayImportTaAF) form; 
    ActionMessages messages =null;
    FormFile file = forms.getTheFile(); 
    Map info=null;
    
    String fileType = file.getFileName().substring(file.getFileName().lastIndexOf(".") + 1);
    if(file.toString().length()<1){ 
      return (mapping.findForward("文件无后缀"));
    }else if(!fileType.equals("xls")){
      return (mapping.findForward("文件后缀不是xls格式"));
    }
    InputStream stream=null;
    try{
        stream= file.getInputStream();
    }catch(Exception e){
          e.printStackTrace();
        }
    
    String orgid = request.getParameter("orgid");
    String payMonth = request.getParameter("payMonth");
    String startPayMonth = request.getParameter("startPayMonth");
    String noteNum = request.getParameter("noteNum");
    String payWay = request.getParameter("payWay");
    String payKind = request.getParameter("payKind");
    String payment_orgname = request.getParameter("payment_orgname");
    ServletContext context = request.getSession().getServletContext();
    String jasperSrc = context.getRealPath("/impXml/"+ "orgaddpay_imp.xml");
    SecurityInfo securityInfo=(SecurityInfo)request.getSession().getAttribute("SecurityInfo");
    Pagination pagination = (Pagination) request.getSession().getAttribute(OrgaddpayTaShowAC.PAGINATION_KEY);
    OrgaddpayTaAF orgaddpayTaAF = (OrgaddpayTaAF)pagination.getQueryCriterions().get("orgaddpayTaAF");
    orgaddpayTaAF.setPayWay(payWay);
    orgaddpayTaAF.setPayKind(payKind);
    System.out.println("payment_orgname...s."+payment_orgname);
    orgaddpayTaAF.setPayment_orgname(payment_orgname);
    pagination.getQueryCriterions().put("orgaddpayTaAF", orgaddpayTaAF);
    File files=new File(forms.getUrl());
    Factory faxtory=new Factory();
    File xmlfile=new File(jasperSrc);
    try {
      stream=file.getInputStream();
      info = faxtory.getInfomation(xmlfile,stream,"org.xpup.hafmis.syscollection.paymng.orgaddpay.dto.");
    } catch (Exception e) {
  //    e.printStackTrace();
      messages=new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("导入失败！",
          false));
      saveErrors(request, messages);
    }
    List addpayHeadImportList = new ArrayList();
    List addpayListImportList = new ArrayList();
    try{
      addpayHeadImportList=(List)info.get("OrgaddpayHeadImport");
      addpayListImportList = (List)info.get("OrgaddpayListImport");
    }catch(Exception e){
   //   e.printStackTrace();
    }
    IOrgaddpayBS orgaddpayBS = (IOrgaddpayBS) BSUtils
    .getBusinessService("orgaddpayBS", this, mapping.getModuleConfig());
    List failList=null;
    try {
      failList=orgaddpayBS.addPaylistBatch(addpayHeadImportList,addpayListImportList,orgid,payMonth,startPayMonth,noteNum,securityInfo,pagination);
      if(failList.size()>0)
      {
        request.getSession().setAttribute("explist",failList);
        response.sendRedirect(request.getContextPath()+"/ExportServlet?ISCANSHU=false&EXP_NAME=orgaddpay_exp");
        return null;
      }
    } catch (BusinessException b) {
      messages=new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("导入失败！"+b.getMessage(),
          false));
      saveErrors(request, messages);
    } catch (Exception e) {
      e.printStackTrace();
    }
    return mapping.findForward("show_orgaddpay");
  }
  
 
}