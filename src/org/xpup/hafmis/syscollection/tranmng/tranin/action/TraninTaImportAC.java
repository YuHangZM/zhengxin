/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.syscollection.tranmng.tranin.action;

import java.io.File;
import java.io.InputStream;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.upload.FormFile;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.imp.Factory;

import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.syscollection.tranmng.tranin.bsinterface.ITraninBS;
import org.xpup.hafmis.syscollection.tranmng.tranin.form.TraninImportAF;

/**
 * MyEclipse Struts Creation date: 04-11-2007 XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class TraninTaImportAC extends Action {
  /*
   * Generated Methods
   */

  /**
   * Method execute
   * 
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return ActionForward
   */
  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    // TODO Auto-generated method stub
    ActionMessages messages = null;
    TraninImportAF forms = (TraninImportAF) form;
    String inOrgId = forms.getInOrgId();
    FormFile file = forms.getTheFile();
    String fileType = file.getFileName().substring(
        file.getFileName().lastIndexOf(".") + 1);
    if (file.toString().length() < 1) {
      return (mapping.findForward("文件无后缀"));
    } else if (!fileType.equals("xls")) {
      return (mapping.findForward("文件后缀不是xls格式"));
    }
    ServletContext context = request.getSession().getServletContext();
    String jasperSrc = context.getRealPath("/impXml/" + "tranin_imp.xml");

    Factory faxtory = new Factory();
    File xmlfile = new File(jasperSrc);
    Map info = null;
    try {
      InputStream files = file.getInputStream();
      info = faxtory.getInfomation(xmlfile, files,
          "org.xpup.hafmis.syscollection.tranmng.tranin.dto.");
    } catch (Exception e) {
      e.printStackTrace();
    }
    List traninImportList1 = (List) info.get("TraninImportHead");
    List traninImportList2 = (List) info.get("TraninImport");
    ITraninBS traninBS = (ITraninBS) BSUtils.getBusinessService("traninBS",
        this, mapping.getModuleConfig());
    try {
      SecurityInfo securityInfo=(SecurityInfo)request.getSession().getAttribute("SecurityInfo");
      traninBS.modifyTraninBatch(traninImportList1, traninImportList2, inOrgId,securityInfo);
      request.getSession().setAttribute("buttonMagssage", "nobutton");
    } catch (BusinessException e) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(e
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    } catch (Exception e) {
      e.printStackTrace();
    }
    return mapping.findForward("showTraninListAC");
  }

}