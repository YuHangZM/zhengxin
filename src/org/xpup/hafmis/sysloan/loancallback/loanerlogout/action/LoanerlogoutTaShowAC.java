/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.loancallback.loanerlogout.action;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.xpup.common.util.BSUtils;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysloan.loancallback.loanerlogout.bsinterface.ILoanerlogoutBS;
import org.xpup.hafmis.sysloan.loancallback.loanerlogout.dto.LoanerlogoutTaDTO;
import org.xpup.hafmis.sysloan.loancallback.loanerlogout.form.LoanerlogoutTaAF;
import org.xpup.security.common.domain.Userslogincollbank;

/**
 * MyEclipse Struts Creation date: 09-20-2007 XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class LoanerlogoutTaShowAC extends Action {
  /*
   * Generated Methods
   */

  /**
   * Method execute
   * 
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return ActionForward
   */
  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    // TODO Auto-generated method stub
    try {
      LoanerlogoutTaAF loanerlogoutTaAF = new LoanerlogoutTaAF();
      loanerlogoutTaAF.setOvaerLoanRepay(null);
      loanerlogoutTaAF.setNoBackMoney(null);
      loanerlogoutTaAF.setOverplusLoanMoney(null);
      loanerlogoutTaAF.setBailBalance(null);
      loanerlogoutTaAF.setType("1");
      if (!"1".equals((String) request.getAttribute("type"))) {
        loanerlogoutTaAF.setType("2");
        ILoanerlogoutBS loanerlogoutBS = (ILoanerlogoutBS) BSUtils
        .getBusinessService("loanerlogoutBS", this, mapping.getModuleConfig());
        if (request.getSession().getAttribute("loanKouAcc")!=null) {
          SecurityInfo securityInfo = (SecurityInfo) request.getSession().getAttribute(
          "SecurityInfo");         
          List loanbankList2 = null;
          try {
            // 取出用户权限放款银行,显示在下拉菜单中
            List loanbankList = securityInfo.getDkUserBankList();         
            loanbankList2 = new ArrayList();
            Userslogincollbank bank = null;
            Iterator itr1 = loanbankList.iterator();
            while (itr1.hasNext()) {
              bank = (Userslogincollbank) itr1.next();            
              loanbankList2.add(bank.getCollBankId());
            }
          } catch (Exception e) {
            e.printStackTrace();
          }
          LoanerlogoutTaDTO loanerlogoutTaDTO= loanerlogoutBS.findLoanerlogoutTaInfo((String) request
              .getSession().getAttribute("loanKouAcc"),loanbankList2);
          String loadKouAcc="";//贷款账号
          String contractId="";//合同编号
          String borrowerName="";//借款人姓名
          String cardKind="";//证件类型
          String cardNum="";//证件号码
          BigDecimal overplusLoanMoney=new BigDecimal(0.00);//剩余本金
          BigDecimal noBackMoney=new BigDecimal(0.00);//核销未收回金额
          BigDecimal ovaerLoanRepay=new BigDecimal(0.00);//挂帐金额
          BigDecimal bailBalance=new BigDecimal(0.00);//保证金余额
          String loanMode="";//还款方式
          loadKouAcc=loanerlogoutTaDTO.getLoadKouAcc();
          contractId=loanerlogoutTaDTO.getContractId();
            borrowerName=loanerlogoutTaDTO.getBorrowerName();
            cardKind=loanerlogoutTaDTO.getTemp_cardKind();
            cardNum=loanerlogoutTaDTO.getCardNum();
            overplusLoanMoney=loanerlogoutTaDTO.getOverplusLoanMoney();
            noBackMoney=loanerlogoutTaDTO.getNoBackMoney();
            ovaerLoanRepay=loanerlogoutTaDTO.getOvaerLoanRepay();
            bailBalance=loanerlogoutTaDTO.getBailBalance();
            loanMode=loanerlogoutTaDTO.getTemp_loanMode();                                 
          loanerlogoutTaAF.setBailBalance(bailBalance);
          loanerlogoutTaAF.setBorrowerName(borrowerName);
          loanerlogoutTaAF.setCardKind(cardKind);
          loanerlogoutTaAF.setCardNum(cardNum);
          loanerlogoutTaAF.setContractId(contractId);
          loanerlogoutTaAF.setLoadKouAcc(loadKouAcc);
          loanerlogoutTaAF.setLoanMode(loanMode);
          loanerlogoutTaAF.setNoBackMoney(noBackMoney);
          loanerlogoutTaAF.setOverplusLoanMoney(overplusLoanMoney);
          loanerlogoutTaAF.setOvaerLoanRepay(ovaerLoanRepay);        
        }
      }
      request.setAttribute("loanerlogoutTaAF", loanerlogoutTaAF);
    } catch (Exception e) {
      // TODO: handle exception
      e.printStackTrace();
    }        
    return mapping.findForward("to_loanerlogoutta_show");
  }
}