/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.dataready.develop.action;

import java.io.File;
import java.io.InputStream;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.upload.FormFile;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.imp.Factory;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysloan.dataready.develop.bsinterface.IDevelopBS;
import org.xpup.hafmis.sysloan.dataready.develop.dto.BuildDTO;
import org.xpup.hafmis.sysloan.dataready.develop.form.BuildImportAF;

/** 
 * MyEclipse Struts
 * Creation date: 06-23-2008
 * 
 * XDoclet definition:
 * @struts.action path="/buildImprotAC" name="buildImportAF" scope="request" validate="true"
 */
public class BuildImprotAC extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		BuildImportAF buildImportAF = (BuildImportAF) form;// TODO Auto-generated method stub
    ActionMessages messages = null;
    FormFile file = buildImportAF.getTheFile();
    String fileType = file.getFileName().substring(
        file.getFileName().lastIndexOf(".") + 1);
    if (file.toString().length() < 1) {
      return (mapping.findForward("文件无后缀"));
    } else if (!fileType.equals("xls")) {
      return (mapping.findForward("文件后缀不是xls格式"));
    }
    ServletContext context = request.getSession().getServletContext();
    String jasperSrc = context.getRealPath("/impXml/" + "build_imp.xml");

    Factory faxtory = new Factory();
    File xmlfile = new File(jasperSrc);
    Map info = null;
    try {
      InputStream files = file.getInputStream();
      info = faxtory.getInfomation(xmlfile, files,
      "org.xpup.hafmis.sysloan.dataready.develop.dto.");
    } catch (Exception e) {
      // TODO: handle exception
      e.printStackTrace();
    }
    List buildImportList1 = (List) info.get("BuildImportHead");
    List buildImportList2 = (List) info.get("BuildImport");
    try {
      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
      .getAttribute("SecurityInfo");

      String floorId = ((BuildDTO)request.getSession().getAttribute("buildInfo_1")).getFloorId();
      String developId = ((BuildDTO)request.getSession().getAttribute("buildInfo_1")).getDeveloperId();
      IDevelopBS developBS = (IDevelopBS) BSUtils.getBusinessService(
          "developBS", this, mapping.getModuleConfig());
      developBS.buildImportInfo(buildImportList1, buildImportList2, floorId, securityInfo,developId);
      
    } catch (BusinessException b) {
      // TODO: handle exception
      messages=new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("导入失败！"+b.getMessage(),
          false));
      saveErrors(request, messages);
      request.setAttribute("errorMessages1", b.getMessage());
      
    }catch (Exception e) {
      e.printStackTrace();
    }
		return mapping.findForward("buildShowAC");
	}
}