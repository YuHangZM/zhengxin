/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.dataready.assistantorg.action;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.actions.LookupDispatchAction;
import org.xpup.common.util.BSUtils;
import org.xpup.hafmis.common.util.BusiConst;
import org.xpup.hafmis.common.util.BusiTools;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysloan.dataready.assistantorg.bsinterface.IEvaluateBS;
import org.xpup.hafmis.sysloan.dataready.assistantorg.dto.EvaluateAFDTO;
import org.xpup.hafmis.sysloan.dataready.assistantorg.form.SurrogateAF;

/** 
 * MyEclipse Struts
 * Creation date: 09-29-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class EvaluateMaintainAC extends LookupDispatchAction {
  public static final String PAGINATION_KEY =
    "org.xpup.hafmis.sysloan.dataready.assistantorg.action.EvaluateShowAC";
  protected Map getKeyMethodMap() {
    Map map = new HashMap();
    map.put("button.add", "add");
    map.put("button.update", "update");
    map.put("button.delete", "remove");
    return map;
  }
  /**
   * 添加方法
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return
   */
  public ActionForward add(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response){
    SurrogateAF surrogateAF=new SurrogateAF();
    try{
     //证件类型，下拉列表
    Map map = BusiTools.listBusiProperty(BusiConst.DOCUMENTSSTATE);
    surrogateAF.setMap(map);
    surrogateAF.setType("添加");
    }catch(Exception e)
    {
      e.printStackTrace();
    }
    //张列改头
    try {
      Map regionMap = BusiTools.listBusiProperty(BusiConst.INAREA);
      surrogateAF.setRegionMap(regionMap);
    } catch (Exception e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }
    //张列改尾
    request.setAttribute("AF", surrogateAF);
    return mapping.findForward("to_evaluate_addupdate");
  }

  
  public ActionForward update(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response){
      String id=(String)request.getParameter("id").trim();
      EvaluateAFDTO evaluateAF=null;
      try{

        IEvaluateBS evaluateBS=(IEvaluateBS)BSUtils
        .getBusinessService("evaluateBS", this, mapping.getModuleConfig());
        evaluateAF=evaluateBS.findEvaluateID(new Integer(id));
        Map map = BusiTools.listBusiProperty(BusiConst.DOCUMENTSSTATE);
        evaluateAF.setMap(map);
        evaluateAF.setType("修改");
        
        //枚举里取 所属地区(张列修改 头)
        Map regionMap = BusiTools.listBusiProperty(BusiConst.INAREA);
        evaluateAF.setRegionMap(regionMap);
        //(张列修改 尾)
        
        request.setAttribute("AF", evaluateAF);
    }catch(Exception e)
    {
      e.printStackTrace();
    }
    return mapping.findForward("to_evaluate_addupdate");
  }
  /**
   * 删除此记录
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return
   */
  public ActionForward remove(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response){
    ActionMessages messages=null;
    String id=(String)request.getParameter("id").trim();
    String error="该记录已经删除!";
    try{
      IEvaluateBS evaluateBS=(IEvaluateBS)BSUtils
      .getBusinessService("evaluateBS", this, mapping.getModuleConfig());
      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
      .getAttribute("SecurityInfo");
      boolean is_asistantOrg=evaluateBS.is_Evaluate_YM(new Integer(id));
      if(is_asistantOrg)
      {
        error="该记录已经删除!";
      }
      else
      {
        evaluateBS.deleteEvaluate(new Integer(id),securityInfo);
        error="删除成功!";
      }
    }
    catch(Exception e)
    {
      messages= new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("删除失败!", false));
      saveErrors(request,messages);
      return mapping.findForward("evaluateShowAC");
    }finally{
      messages= new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(error, false));
      saveErrors(request,messages);
    }
    return mapping.findForward("evaluateShowAC");
  }
}