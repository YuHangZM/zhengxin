/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.querystatistics.querystatistics.loandeskaccquery.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.Pagination;
import org.xpup.common.util.PaginationUtils;
import org.xpup.hafmis.common.util.BusiConst;
import org.xpup.hafmis.common.util.BusiTools;
import org.xpup.hafmis.orgstrct.dto.OfficeDto;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysloan.common.domain.entity.AssistantOrg;
import org.xpup.hafmis.sysloan.querystatistics.querystatistics.loandeskaccquery.bsinterface.ILoandeskaccqueryBS;
import org.xpup.hafmis.sysloan.querystatistics.querystatistics.loandeskaccquery.form.LoanDeskaccQueryTaAF;
import org.xpup.security.common.domain.Userslogincollbank;

/**
 * MyEclipse Struts Creation date: 10-19-2007 XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class LoanDeskaccQueryTaShowAC extends Action {
  public static final String PAGINATION_KEY = "org.xpup.hafmis.sysloan.querystatistics.querystatistics.loandeskaccquery.action.LoanDeskaccQueryTaShowAC";

  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    Pagination pagination = getPagination(PAGINATION_KEY, request);
    PaginationUtils.updatePagination(pagination, request);
    ILoandeskaccqueryBS loandeskaccqueryBS = (ILoandeskaccqueryBS) BSUtils
        .getBusinessService("loandeskaccqueryBS", this, mapping
            .getModuleConfig());
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");

    LoanDeskaccQueryTaAF loanDeskaccQueryTaAF = new LoanDeskaccQueryTaAF();
    try {
      loanDeskaccQueryTaAF = loandeskaccqueryBS.showLoandeskaccList(pagination,
          securityInfo);
      String payBank = (String) pagination.getQueryCriterions().get("payBank");
      loanDeskaccQueryTaAF.setPayBank(payBank);
      // 求办事处
      List temp_officeList = securityInfo.getOfficeList();
      List li = new ArrayList();
      for (int i = 0; i < temp_officeList.size(); i++) {
        OfficeDto officedto = null;
        officedto = (OfficeDto) temp_officeList.get(i);
        li.add(new org.apache.struts.util.LabelValueBean(officedto
            .getOfficeName(), officedto.getOfficeCode()));
      }
      // 求放款银行
      List temp_DkbankList = securityInfo.getDkUserBankList();
      List libank = new ArrayList();
      for (int i = 0; i < temp_DkbankList.size(); i++) {
        Userslogincollbank u = null;
        u = (Userslogincollbank) temp_DkbankList.get(i);
        libank.add(new org.apache.struts.util.LabelValueBean(u
            .getCollBankName(), u.getCollBankId().toString()));
      }
      // 在合同状态中去掉除了还款中，和已还清这两种状态外，其它的都去掉。
      Map temp_Map = BusiTools.listBusiProperty(BusiConst.PLCONTRACTSTATUS);
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_APPL));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_THROUGHAUDIT));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_THROUGHAPPROVAL));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_NOTHROUGHAUDIT));
      temp_Map
          .remove(new Integer(BusiConst.PLCONTRACTSTATUS_NOTHROUGHAPPROVAL));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_SECAUDIT));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_SECAPPROVAL));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_ISSUEDNOTICES));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_ISSUING));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_CANCELLATION));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_FINALJUDGMENT));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_FIRSTCHECK));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_REDATESURE));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_CHKAGAIN));
      temp_Map.remove(new Integer(BusiConst.PLCONTRACTSTATUS_APPROVALAGAIN));
      loanDeskaccQueryTaAF.setContact_stMap(temp_Map);
      // 房屋类型
      Map houseTypeMap = BusiTools.listBusiProperty(BusiConst.PLHOUSETYPE);
      loanDeskaccQueryTaAF.setHouseTypeMap(houseTypeMap);
      // 贷款类型
      Map loanTypeMap = BusiTools.listBusiProperty(BusiConst.YesNo);
      loanDeskaccQueryTaAF.setLoanTypeMap(loanTypeMap);
      // 求担保公司
      List temp_assistantorgList = loanDeskaccQueryTaAF.getAssistantorgList();
      List assistantorgList = new ArrayList();
      for (int i = 0; i < temp_assistantorgList.size(); i++) {
        AssistantOrg assistantOrg = null;
        assistantOrg = (AssistantOrg) temp_assistantorgList.get(i);
        assistantorgList.add(new org.apache.struts.util.LabelValueBean(
            assistantOrg.getAssistantOrgName(), assistantOrg
                .getAssistantOrgId().toString()));
      }
      request.setAttribute("officlist", li);
      request.setAttribute("paybanklist", libank);
      request.setAttribute("assistantorglist", assistantorgList);
      request.setAttribute("loanDeskaccQueryTaAF", loanDeskaccQueryTaAF);
    } catch (Exception e) {
      e.printStackTrace();
    }

    return mapping.findForward("loandeskaccquery_show");
  }

  private Pagination getPagination(String paginationKey,
      HttpServletRequest request) {
    Pagination pagination = (Pagination) request.getSession().getAttribute(
        paginationKey);
    if (pagination == null) {
      pagination = new Pagination(0, 10, 1, " p11.contract_id ", "DESC",
          new HashMap(0));
      request.getSession().setAttribute(paginationKey, pagination);
    }
    return pagination;
  }
}