/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.loanapply.loanapply.action;

import java.io.IOException;
import java.math.BigDecimal;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysloan.common.loanconditionsset.ILoanConditionsParamSetBS;
import org.xpup.hafmis.sysloan.loanapply.loanapply.bsinterface.ILoanapplyBS;
import org.xpup.hafmis.sysloan.loanapply.loanapply.form.LoanapplyTbNewAF;

/**
 * MyEclipse Struts Creation date: 09-27-2007 XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class LoanapplyTbEmpInfoFindAAC extends Action {

  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    response.setContentType("text/html;charset=UTF-8");
    response.setHeader("Cache-Control", "no-cache");
    try {
      String empId = (String) request.getParameter("empId");
      String orgId = (String) request.getParameter("orgId");
      String contractId = (String) request.getParameter("contractaId");

      ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService(
          "loanapplyBS", this, mapping.getModuleConfig());
      ILoanConditionsParamSetBS loanConditionsParamSetBS = (ILoanConditionsParamSetBS) BSUtils
          .getBusinessService("loanConditionsParamSetBS", this, mapping
              .getModuleConfig());
      try {
        SecurityInfo securityInfo = (SecurityInfo) request.getSession()
            .getAttribute("SecurityInfo");
        LoanapplyTbNewAF loanapplytbnewAF = loanapplyBS
            .findAssistantBorrowerInfoByempId(empId.trim(), orgId.trim(),
                contractId.trim());
        loanapplytbnewAF.setContractId(contractId);
        loanConditionsParamSetBS.isCanSysLoanTb(loanapplytbnewAF, securityInfo);
        // loanapplyBS.findEmpIsPayingback(loanapplytbnewAF.getName(),
        // loanapplytbnewAF.getCardNum());
        String text = "";
        // 设置最大可支取金额
        // 帐户余额-月缴存额*12
        BigDecimal zdjzqje = new BigDecimal(0.00);
        // 如果loanapplytbnewAF.getZdjzqje()返回null说明取的不是pl113的数据
        if (loanapplytbnewAF.getZdjzqje() == null) {
          if (loanapplytbnewAF.getPay_oldyear() != null
              && !"".equals(loanapplytbnewAF.getPay_oldyear())) {
            zdjzqje = new BigDecimal(loanapplytbnewAF.getAccBlnce())
                .subtract(new BigDecimal(loanapplytbnewAF.getPay_oldyear())
                    .multiply(new BigDecimal(12)));
          } else if (!"".equals(loanapplytbnewAF.getAccBlnce())
              && !"".equals(loanapplytbnewAF.getMonthPay())) {
            zdjzqje = new BigDecimal(loanapplytbnewAF.getAccBlnce())
                .subtract(new BigDecimal(loanapplytbnewAF.getMonthPay())
                    .multiply(new BigDecimal(12)));
          }
          if (zdjzqje.doubleValue() < 0) {
            zdjzqje = new BigDecimal(0.00);
          }
          loanapplytbnewAF.setZdjzqje(zdjzqje + "");
        }
        text = "displayIn('" + loanapplytbnewAF.getEmpId() + "','"
            + loanapplytbnewAF.getName() + "','"
            + loanapplytbnewAF.getRelation() + "','"
            + loanapplytbnewAF.getSex() + "','"
            + loanapplytbnewAF.getCardKind() + "','"
            + loanapplytbnewAF.getCardNum() + "','"
            + loanapplytbnewAF.getBirthday() + "','"
            + loanapplytbnewAF.getNation() + "','"
            + loanapplytbnewAF.getNativePlace() + "','"
            + loanapplytbnewAF.getBusiness() + "','"
            + loanapplytbnewAF.getTitle() + "','"
            + loanapplytbnewAF.getMarriageSt() + "','"
            + loanapplytbnewAF.getDegree() + "','"
            + loanapplytbnewAF.getHomeAddr() + "','"
            + loanapplytbnewAF.getHomeMail() + "','"
            + loanapplytbnewAF.getHomeMobile() + "','"
            + loanapplytbnewAF.getHouseTel() + "','"
            + loanapplytbnewAF.getOrgId() + "','"
            + loanapplytbnewAF.getOrgName() + "','"
            + loanapplytbnewAF.getOrgTel() + "','"
            + loanapplytbnewAF.getOrgAddr() + "','"
            + loanapplytbnewAF.getOrgMail() + "','"
            + loanapplytbnewAF.getAccBlnce() + "','"
            + loanapplytbnewAF.getMonthSalary() + "','"
            + loanapplytbnewAF.getMonthPay() + "','"
            + loanapplytbnewAF.getEmpSt() + "','"
            + loanapplytbnewAF.getBgnDate() + "','"
            + loanapplytbnewAF.getEndDate() + "','"
            + loanapplytbnewAF.getZdjzqje() + "')";
        response.getWriter().write(text);
        response.getWriter().close();

      } catch (BusinessException e) {
        e.printStackTrace();
        String text = "";
        text = "displayInerror('" + e.getLocalizedMessage().toString() + "')";
        response.getWriter().write(text);
        response.getWriter().close();
      }
    } catch (IOException e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }
    return null;
  }
}