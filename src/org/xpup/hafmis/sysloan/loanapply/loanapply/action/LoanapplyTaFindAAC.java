/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.loanapply.loanapply.action;

import java.io.IOException;
import java.math.BigDecimal;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysloan.common.loanconditionsset.ILoanConditionsParamSetBS;
import org.xpup.hafmis.sysloan.loanapply.loanapply.bsinterface.ILoanapplyBS;
import org.xpup.hafmis.sysloan.loanapply.loanapply.form.LoanapplyNewAF;

/**
 * MyEclipse Struts Creation date: 09-21-2007 XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class LoanapplyTaFindAAC extends Action {

  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    response.setContentType("text/html;charset=UTF-8");
    response.setHeader("Cache-Control", "no-cache");
    try {
      String empid = (String) request.getParameter("empid");
      String orgid = (String) request.getParameter("orgid");
      String office = (String) request.getParameter("office");
      ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService(
          "loanapplyBS", this, mapping.getModuleConfig());
      ILoanConditionsParamSetBS loanConditionsParamSetBS = (ILoanConditionsParamSetBS) BSUtils
          .getBusinessService("loanConditionsParamSetBS", this, mapping
              .getModuleConfig());
      try {
        SecurityInfo securityInfo = (SecurityInfo) request.getSession()
            .getAttribute("SecurityInfo");
        LoanapplyNewAF loanaf = loanapplyBS.findEmpInfo(empid, orgid);
        loanaf.getBorrower().setOffice(office);
        // 主要判断是否有还款中状态的记录
        // loanapplyBS.findEmpIsPayingback(loanaf.getBorrower().getBorrowerName(),
        // loanaf.getBorrower().getCardNum());
        loanConditionsParamSetBS.isCanSysLoan(loanaf, securityInfo);
        BigDecimal zdjzqje = new BigDecimal(0.00);
        // 设置最大可支取金额
        // 帐户余额-月缴存额*12
        if (loanaf.getBorrower().getPay_oldyear() != null
            && !"".equals(loanaf.getBorrower().getPay_oldyear())) {
          zdjzqje = loanaf.getBorrower().getAccBlnce().subtract(
              new BigDecimal(loanaf.getBorrower().getPay_oldyear())
                  .multiply(new BigDecimal(12)));
        } else {
          zdjzqje = loanaf.getBorrower().getAccBlnce().subtract(
              loanaf.getBorrower().getMonthPay().multiply(new BigDecimal(12)));
        }
        if (zdjzqje.doubleValue() < 0) {
          zdjzqje = new BigDecimal(0.00);
        }
        loanaf.setZdjzqje(zdjzqje);
        String str = "";
        String empId = "";
        String orgId = "";
        for (int i = 0; i < 6 - loanaf.getEmpid().length(); i++) {
          str += "0";
        }
        empId = str + loanaf.getEmpid();
        str = "";
        for (int i = 0; i < 10 - loanaf.getBorrower().getOrgId().toString()
            .length(); i++) {
          str += "0";
        }
        orgId = str + loanaf.getBorrower().getOrgId().toString();
        String text = "";
        text = "display('" + empId + "','"
            + loanaf.getBorrower().getBorrowerName() + "','"
            + loanaf.getBorrower().getSex() + "','"
            + loanaf.getBorrower().getCardKind() + "','"
            + loanaf.getBorrower().getCardNum() + "','"
            + loanaf.getBorrower().getBirthday() + "','" + orgId + "','"
            + loanaf.getBorrower().getOrgName() + "','"
            + loanaf.getBorrower().getOrgTel() + "','"
            + loanaf.getBorrower().getOrgMail() + "','"
            + loanaf.getBorrower().getAccBlnce() + "','"
            + loanaf.getBorrower().getOrgAddr() + "','"
            + loanaf.getBorrower().getMonthSalary() + "','"
            + loanaf.getBorrower().getMonthPay() + "','"
            + loanaf.getBorrower().getEmpSt_() + "','"
            + loanaf.getBorrower().getBgnDate() + "','"
            + loanaf.getBorrower().getOffice() + "','"
            + loanaf.getBorrower().getEndDate() + "','" 
            + loanaf.getZdjzqje() + "','"
            + loanaf.getIsPsnalAcc()
            + "')";
        response.getWriter().write(text);
        response.getWriter().close();

      } catch (BusinessException e) {
        e.printStackTrace();
        String text = "";
        text = "display1('" + e.getLocalizedMessage().toString() + "')";
        response.getWriter().write(text);
        response.getWriter().close();
      }

    } catch (IOException e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }
    return null;
  }
}