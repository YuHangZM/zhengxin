/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.loanapply.loanapply.action;

import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.Pagination;
import org.xpup.common.util.PaginationUtils;
import org.xpup.hafmis.common.util.BusiConst;
import org.xpup.hafmis.common.util.BusiTools;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysloan.loanapply.loanapply.bsinterface.ILoanapplyBS;
import org.xpup.hafmis.sysloan.loanapply.loanapply.form.LoanapplyTeNewAF;

/** 
 * MyEclipse Struts
 * Creation date: 10-03-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class LoanapplyTeShowAC extends Action {
  public static final String PAGINATION_KEY = "org.xpup.hafmis.sysloan.loanapply.loanapply.action.LoanapplyTeShowAC";
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
    
    Pagination pagination = getPagination(PAGINATION_KEY, request);
    PaginationUtils.updatePagination(pagination, request);
    LoanapplyTeNewAF loanapplytenewAF=new LoanapplyTeNewAF();
    ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService("loanapplyBS", this, mapping.getModuleConfig());
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
    .getAttribute("SecurityInfo");
    request.getSession().setAttribute("contractid",null);
    ActionMessages messages = null;  
      try {
        loanapplytenewAF=loanapplyBS.showBorrowerList(pagination,securityInfo);
        
        List lis=loanapplytenewAF.getLis();
        request.getSession().setAttribute("printlis", lis);
      } catch (BusinessException e) {
        messages = new ActionMessages();
        messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(e.getLocalizedMessage().toString(), false));
        saveErrors(request, messages);
        
      } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
      }
      try {
        loanapplytenewAF.setBuyHouseTypeMap(BusiTools.listBusiProperty(BusiConst.PLHOUSETYPE));
      } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
      }
      try {
        loanapplytenewAF.setContranct_stMap(BusiTools.listBusiProperty(BusiConst.PLCONTRACTSTATUS));
      } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
      }
    request.setAttribute("loanapplytenewAF", loanapplytenewAF);
		return mapping.findForward("loanapplyte_new");
	}
  private Pagination getPagination(String paginationKey,HttpServletRequest request) {
    Pagination pagination = (Pagination) request.getSession().getAttribute(
        paginationKey);
    if (pagination == null) {
      pagination = new Pagination(0, 10, 1, "p4.op_time", "DESC", new HashMap(0));
      request.getSession().setAttribute(paginationKey, pagination);
    }

    return pagination;
  }
}