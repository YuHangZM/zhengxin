/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.loanapply.loanapply.action;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.actions.LookupDispatchAction;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysloan.common.loanconditionsset.ILoanConditionsParamSetBS;
import org.xpup.hafmis.sysloan.loanapply.loanapply.bsinterface.ILoanapplyBS;
import org.xpup.hafmis.sysloan.loanapply.loanapply.form.LoanapplyTbNewAF;

/** 
 * MyEclipse Struts
 * Creation date: 09-26-2007
 * 
 * XDoclet definition:
 * @struts.action path="loanapplytbtopmaintianAC" name="idAF" scope="request" validate="true"
 */
public class LoanapplyTbTopMainTianAC extends LookupDispatchAction {
	
  protected Map getKeyMethodMap() {
    Map map = new HashMap();
    map.put("button.add", "add");
    map.put("button.sure", "sure");
    return map;
  }
	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	  request.getSession().setAttribute("temp_addtype", "temp_addtype");
	  request.getSession().setAttribute("maxauxiliaryid", null);

		return mapping.findForward("loanapplytbshowAC");
	}
  public ActionForward sure(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    
    ActionMessages messages = null;
    LoanapplyTbNewAF loanapplytbnewAF=(LoanapplyTbNewAF)form;
    
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
    .getAttribute("SecurityInfo");
    
    ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService(
        "loanapplyBS", this, mapping.getModuleConfig());
    ILoanConditionsParamSetBS loanConditionsParamSetBS = (ILoanConditionsParamSetBS) BSUtils.getBusinessService(
        "loanConditionsParamSetBS", this, mapping.getModuleConfig());//前提条件设置BS
    String temp_addtype=(String)request.getSession().getAttribute("temp_addtype");
    request.getSession().setAttribute("temp_addtype",null);
    try {
      loanConditionsParamSetBS.isCanSysLoanTb(loanapplytbnewAF, securityInfo);
      loanapplyBS.addAssistantBorrowerInfo(loanapplytbnewAF,securityInfo,temp_addtype);
      messages=new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("信息已保存！",
          false));
      saveErrors(request, messages);
    } catch (BusinessException e) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(e
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    }
    return mapping.findForward("loanapplytbshowAC");
  }

}