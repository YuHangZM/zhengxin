/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.loanapply.loanapply.action;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import jcifs.smb.PictureUpload;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.actions.LookupDispatchAction;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.hafmis.common.form.IdAF;
import org.xpup.hafmis.common.util.BusiConst;
import org.xpup.hafmis.common.util.BusiTools;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysloan.common.domain.entity.Borrower;
import org.xpup.hafmis.sysloan.dataready.loanpara.bsinterface.ILoanDocNumDesignBS;
import org.xpup.hafmis.sysloan.loanapply.loanapply.bsinterface.ILoanapplyBS;
import org.xpup.hafmis.sysloan.loanapply.loanapply.form.LoanapplyNewAF;
import org.xpup.hafmis.sysloan.loanapply.loanapply.form.LoanapplyTbNewAF;
import org.xpup.hafmis.sysloan.loanapply.loanapply.form.LoanapplyTcNewAF;
import org.xpup.hafmis.sysloan.loanapply.loanapply.form.LoanapplyTdNewAF;

public class LoanapplyTeMainTianAC extends LookupDispatchAction {

  protected Map getKeyMethodMap() {
    Map map = new HashMap();
    map.put("button.update", "update");
    map.put("button.delete", "delete");
    map.put("button.vipcheck.print", "print");
    map.put("button.print.list", "printall");
    map.put("button.true.pproval", "truepproval");
    map.put("button.printacceptance", "printacceptance");
    map.put("button.printloanapply", "printloanapply");
    map.put("button.print.sechousecontactlist", "printsec_hand_house");
    map.put("button.scan.other", "scan");
    map.put("button.chexiaoshenqing", "chexiaoshenqing");
    return map;
  }

  public ActionForward scan(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws Exception {
    ActionMessages messages = null;
    PictureUpload pu = new PictureUpload();
    String path;
    try {
      IdAF idAF = (IdAF) form;
      String contractId = idAF.getId().toString();
      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");
      String serverPath = BusiConst.UPLOAD_SERVER_PATH;
//      path = pu.upload(securityInfo.getUserInfo().getUserIp(), "picture",
//          serverPath);
      path = pu.upload(securityInfo.getUserInfo().getUserIp(), "picture",
          serverPath,contractId);
      pu.delete(securityInfo.getUserInfo().getUserIp(), "picture");
      ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService(
          "loanapplyBS", this, mapping.getModuleConfig());
      loanapplyBS.updateBorrowerLoanInfo(contractId,
          path);
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("…®√ËÕÍ≥…", false));
      saveErrors(request, messages);
    } catch (BusinessException e) {
      e.printStackTrace();
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(e
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    }
    return mapping.findForward("loanapplyteshowAC");
  }
  public ActionForward update(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    IdAF idAF = (IdAF) form;
    String id = idAF.getId().toString();
    request.getSession().setAttribute("contractIdHL", null);
    request.getSession().setAttribute("contractid", id);
    request.getSession().setAttribute("remend", "a");
    request.getSession().setAttribute(LoanapplyTeShowAC.PAGINATION_KEY, null);
    return mapping.findForward("showLoanapplyAC");
  }

  public ActionForward delete(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    IdAF idAF = (IdAF) form;
    String id = idAF.getId().toString();
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");
    ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService(
        "loanapplyBS", this, mapping.getModuleConfig());
    ActionMessages messages = null;

    try {
      loanapplyBS.deleteBorrowerInfo(id, securityInfo);
      request.getSession().setAttribute("contractid", null);
    } catch (BusinessException e) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(e
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    } catch (Exception e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }

    return mapping.findForward("loanapplyteshowAC");
  }

  public ActionForward print(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    ActionMessages messages = null;
    IdAF idAF = (IdAF) form;
    String id = idAF.getId().toString();
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");
    ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService(
        "loanapplyBS", this, mapping.getModuleConfig());
    try {
      // String opertname = securityInfo.getRealName();
      String bizDate = securityInfo.getUserInfo().getPlbizDate();
      ILoanDocNumDesignBS loanDocNumDesignBS = (ILoanDocNumDesignBS) BSUtils
          .getBusinessService("sysloanloanDocNumDesignBS", this, mapping
              .getModuleConfig());
      String opertname = "";
      try {
        String name = loanDocNumDesignBS.getNamePara();

        if (name.equals("1")) {
          opertname = securityInfo.getUserName();
        } else {
          opertname = securityInfo.getRealName();
        }

      } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
      }
      request.setAttribute("opertname", opertname);
      request.setAttribute("bizDate", bizDate);

      LoanapplyNewAF loanapplynewAF = loanapplyBS
          .showLoanapplyInfoBycontractid(id, securityInfo);

      String officename = loanapplyBS.findOfficeName(loanapplynewAF
          .getBorrower().getOffice());
      loanapplynewAF.setOfic(officename);
      loanapplynewAF.setSexc(BusiTools.getBusiValue(Integer
          .parseInt(loanapplynewAF.getBorrower().getSex()), BusiConst.SEX));
      loanapplynewAF.setCardkingc(BusiTools.getBusiValue(Integer
          .parseInt(loanapplynewAF.getBorrower().getCardKind()),
          BusiConst.DOCUMENTSSTATE));
      request.setAttribute("loanapplynewAF", loanapplynewAF);
      LoanapplyTbNewAF ab = new LoanapplyTbNewAF();
      ab = loanapplyBS.findAssistanBorrowerInfo(id, securityInfo, null);
      request.setAttribute("loanapplytbnewAF", ab);
      LoanapplyTdNewAF loanapplytdnewAF = loanapplyBS
          .printBorrowerLoanInfoByContractid(id, securityInfo);
      request.setAttribute("loanapplytdnewAF", loanapplytdnewAF);
    } catch (BusinessException be) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(be
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    } catch (Exception e) {
      e.printStackTrace();
    }
    return mapping.findForward("loanapply_ta_cell");
  }

  public ActionForward printall(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    List list = (List) request.getSession().getAttribute("printlis");
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");
    ILoanDocNumDesignBS loanDocNumDesignBS = (ILoanDocNumDesignBS) BSUtils
        .getBusinessService("sysloanloanDocNumDesignBS", this, mapping
            .getModuleConfig());
    String opertname = "";
    try {
      String name = loanDocNumDesignBS.getNamePara();

      if (name.equals("1")) {
        opertname = securityInfo.getUserName();
      } else {
        opertname = securityInfo.getRealName();
      }

    } catch (Exception e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }

    String time = securityInfo.getUserInfo().getPlbizDate();
    request.setAttribute("opertname", opertname);
    request.setAttribute("time", time);

    request.setAttribute("cellList", list);
    return mapping.findForward("loanapply_tb_cell");
  }

  public ActionForward truepproval(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    IdAF idAF = (IdAF) form;
    String id = idAF.getId().toString();
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");
    ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService(
        "loanapplyBS", this, mapping.getModuleConfig());

    ActionMessages messages = null;
    try {
      loanapplyBS.truepproval(id, securityInfo);
    } catch (BusinessException e) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(e
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    }
    return mapping.findForward("loanapplyteshowAC");
  }
  public ActionForward chexiaoshenqing(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    IdAF idAF = (IdAF) form;
    String id = idAF.getId().toString();
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
    .getAttribute("SecurityInfo");
    ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService(
        "loanapplyBS", this, mapping.getModuleConfig());
    
    ActionMessages messages = null;
    try {
      loanapplyBS.chexiaoshenqing(id, securityInfo);
    } catch (BusinessException e) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(e
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    }
    return mapping.findForward("loanapplyteshowAC");
  }

  /**
   * ¥Ú”°¥˚øÓ≥–≈µ È
   * 
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return
   * @throws Exception
   */
  public ActionForward printacceptance(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws Exception {

    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");
    ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService(
        "loanapplyBS", this, mapping.getModuleConfig());
    IdAF idAF = (IdAF) form;
    String id = idAF.getId().toString();
    String userName = "";
    LoanapplyTdNewAF loanapplytdnewAF = new LoanapplyTdNewAF();
    loanapplytdnewAF = loanapplyBS.printBorrowerLoanInfoByContractid(id,
        securityInfo);
    String loanmoney = loanapplytdnewAF.getLoanMoney();
    if (loanmoney != null && !"".equals(loanmoney)) {
      loanapplytdnewAF.setLoanMoneyWY(loanmoney);
    }
    ILoanDocNumDesignBS loanDocNumDesignBS = (ILoanDocNumDesignBS) BSUtils
        .getBusinessService("sysloanloanDocNumDesignBS", this, mapping
            .getModuleConfig());
    try {
      String name = loanDocNumDesignBS.getNamePara();

      if (name.equals("1")) {
        userName = securityInfo.getUserName();
      } else {
        userName = securityInfo.getRealName();
      }
    } catch (Exception e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }
    String plbizDate = securityInfo.getUserInfo().getPlbizDate();
    request.setAttribute("userName", userName);
    request.setAttribute("plbizDate", plbizDate);
    if (loanapplytdnewAF == null) {
      loanapplytdnewAF = new LoanapplyTdNewAF();
    }
    request.setAttribute("loanapplytdnewAF", loanapplytdnewAF);
    return mapping.findForward("to_acceptance_cll");
  }

  /**
   * ¥Ú”°¥˚øÓ…Í«Î È
   * 
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return
   * @throws Exception
   */
  public ActionForward printloanapply(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    ActionMessages messages = null;
    IdAF idAF = (IdAF) form;
    String id = idAF.getId().toString();
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");
    ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService(
        "loanapplyBS", this, mapping.getModuleConfig());
    try {
      // String opertname = securityInfo.getRealName();
      String time = securityInfo.getUserInfo().getPlbizDate();
      ILoanDocNumDesignBS loanDocNumDesignBS = (ILoanDocNumDesignBS) BSUtils
          .getBusinessService("sysloanloanDocNumDesignBS", this, mapping
              .getModuleConfig());
      String opertname = "";
      try {
        String name = loanDocNumDesignBS.getNamePara();

        if (name.equals("1")) {
          opertname = securityInfo.getUserName();
        } else {
          opertname = securityInfo.getRealName();
        }

      } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
      }
      request.setAttribute("opertname", opertname);
      request.setAttribute("time", time);

      LoanapplyNewAF loanapplynewAF = loanapplyBS
          .showLoanapplyInfoBycontractid(id, securityInfo);
      loanapplyBS.updatePrintStatus(id);
      String officename = loanapplyBS.findOfficeName(loanapplynewAF
          .getBorrower().getOffice());
      loanapplynewAF.setOfic(officename);
      loanapplynewAF.setSexc(BusiTools.getBusiValue(Integer
          .parseInt(loanapplynewAF.getBorrower().getSex()), BusiConst.SEX));
      loanapplynewAF.setCardkingc(BusiTools.getBusiValue(Integer
          .parseInt(loanapplynewAF.getBorrower().getCardKind()),
          BusiConst.DOCUMENTSSTATE));

      Borrower borrower = loanapplynewAF.getBorrower();
      // –ﬁ÷∞ŒÒ
      String buss = borrower.getBusiness();
      if (buss == null) {
        borrower.setBusiness("");
      }
      // –ﬁ∏ƒ÷∞≥∆
      String title = borrower.getTitle();
      if (title == null) {
        borrower.setTitle("");
      }
      // –ﬁ∏ƒ√Ò◊Â
      String nation = borrower.getNation();
      if (nation == null) {
        borrower.setNation("");
      }
      // –ﬁ∏ƒªßºÆÀ˘‘⁄µÿ
      String nationplace = borrower.getNativePlace();
      if (nationplace == null) {
        borrower.setNativePlace("");
      }
      // –ﬁ∏ƒªÈ“ˆ◊¥øˆ
      String marriage = borrower.getMarriageSt();
      if (marriage == null) {
        borrower.setMarriageSt("");
      }
      // –ﬁ∏ƒŒƒªØ≥Ã∂»
      String degree = borrower.getDegree();
      if (degree == null) {
        borrower.setDegree("");
      }
      // –ﬁ∏ƒº“Õ•◊°÷∑
      String homeaddr = borrower.getHomeAddr();
      if (homeaddr == null) {
        borrower.setHomeAddr("");
      }
      // –ﬁ∏ƒæ”◊°µÿ÷∑” ’˛±‡¬Î
      String homemail = borrower.getHomeMail();
      if (homemail == null) {
        borrower.setHomeMail("");
      }
      // –ﬁ∏ƒ◊°’¨µÁª∞
      String housetel = borrower.getHouseTel();
      if (housetel == null) {
        borrower.setHouseTel("");
      }
      // –ﬁ∏ƒ“∆∂ØµÁª∞
      String homemobile = borrower.getHomeMobile();
      if (homemobile == null) {
        borrower.setHomeMobile("");
      }

      // –ﬁ∏ƒµ•Œª√˚≥∆
      String orgname = borrower.getOrgName();
      if (orgname == null) {
        borrower.setOrgName("");
      }
      // –ﬁ∏ƒµ•ŒªµÁª∞
      String orgtel = borrower.getOrgTel();
      if (orgtel == null) {
        borrower.setOrgTel("");
      }
      // –ﬁ∏ƒµ•Œªµƒ” ’˛±‡¬Î
      String orgmail = borrower.getOrgMail();
      if (orgmail == null) {
        borrower.setOrgMail("");
      }
      // –ﬁ∏ƒµ•Œªµÿ÷∑
      String orgaddr = borrower.getOrgAddr();
      if (orgaddr == null) {
        borrower.setOrgAddr("");
      }

      // –ﬁ∏ƒ≥ıΩ…ƒÍ‘¬
      String bdate = borrower.getBgnDate();
      if (bdate == null) {
        borrower.setBgnDate("");
      }
      // –ﬁ∏ƒΩ…÷¡ƒÍ‘¬
      String ddate = borrower.getEndDate();
      if (ddate == null) {
        borrower.setEndDate("");
      }

      // –ﬁ∏ƒ∆‰À˚¡™œµ»À–’√˚A
      String contactAName = borrower.getContactAName();
      if (contactAName == null) {
        borrower.setContactAName("");
      }
      // –ﬁ∏ƒ”ÎΩËøÓ»ÀπÿœµA
      String relationA = borrower.getRelationA();
      if (relationA == null) {
        borrower.setRelationA("");
      }
      // –ﬁ∏ƒ∆‰À˚¡™œµ»Àπ§◊˜µ•ŒªA
      String contactAOrgName = borrower.getContactAOrgName();
      if (contactAOrgName == null) {
        borrower.setContactAOrgName("");
      }
      // –ﬁ∏ƒ∆‰À˚¡™œµ»Àµ•ŒªµÁª∞A
      String contactAOrgTel = borrower.getContactAOrgTel();
      if (contactAOrgTel == null) {
        borrower.setContactAOrgTel("");
      }
      // –ﬁ∏ƒ∆‰À˚¡™œµ»À◊°’¨µÁª∞A
      String contactAHouseTel = borrower.getContactAHouseTel();
      if (contactAHouseTel == null) {
        borrower.setContactAHouseTel("");
      }
      // –ﬁ∏ƒ∆‰À˚¡™œµ»À“∆∂ØµÁª∞A
      String contactAMobile = borrower.getContactAMobile();
      if (contactAMobile == null) {
        borrower.setContactAMobile("");
      }
      // –ﬁ∏ƒ∆‰À˚¡™œµ»À–’√˚B
      String contactBName = borrower.getContactBName();
      if (contactBName == null) {
        borrower.setContactBName("");
      }
      // –ﬁ∏ƒ”ÎΩËøÓ»ÀπÿœµB
      String relationB = borrower.getRelationB();
      if (relationB == null) {
        borrower.setRelationB("");
      }
      // –ﬁ∏ƒ∆‰À˚¡™œµ»Àπ§◊˜µ•ŒªB
      String contactBOrgName = borrower.getContactBOrgName();
      if (contactBOrgName == null) {
        borrower.setContactBOrgName("");
      }
      // –ﬁ∏ƒ∆‰À˚¡™œµ»Àµ•ŒªµÁª∞B
      String contactborgtel = borrower.getContactBOrgTel();
      if (contactborgtel == null) {
        borrower.setContactBOrgTel("");
      }
      // –ﬁ∏ƒ∆‰À˚¡™œµ»À◊°’¨µÁª∞B
      String contactBHouseTel = borrower.getContactBHouseTel();
      if (contactBHouseTel == null) {
        borrower.setContactBHouseTel("");
      }
      // –ﬁ∏ƒ∆‰À˚¡™œµ»À“∆∂ØµÁª∞B
      String contactBMobile = borrower.getContactBMobile();
      if (contactBMobile == null) {
        borrower.setContactBMobile("");
      }
      // –ﬁ∏ƒ∆‰À˚¡™œµ»ÀC
      borrower.setContactCName(borrower.getContactCName() == null ? ""
          : borrower.getContactCName());
      borrower.setRelationC(borrower.getRelationC() == null ? "" : borrower
          .getRelationC());
      borrower.setContactCOrgName(borrower.getContactCOrgName() == null ? ""
          : borrower.getContactCOrgName());
      borrower.setContactCHouseTel(borrower.getContactCHouseTel() == null ? ""
          : borrower.getContactCHouseTel());

      request.setAttribute("loanapplynewAF", loanapplynewAF);
      LoanapplyTcNewAF loanapplytcnewAF = new LoanapplyTcNewAF();
      loanapplytcnewAF = loanapplyBS.showBuyHouseInfoBycontractid(id, null);
      // ‘ˆº” ≤¶øÓø™ªß––£¨≤¶øÓø™ªß’À∫≈£¨»Áπ˚Ãÿ ‚…Ë∂®∫√∫Û£¨∏√œÓŒ™±ÿ ‰œÓ£¨«““‘∫Û¥Ú”°ø™∑¢…Ãø™ªß––∫Õ’À∫≈»°’‚¡Ω∏ˆ◊÷∂Œƒ⁄»›
      if (loanapplytcnewAF.getFundBank() != null && !loanapplytcnewAF.getFundBank().equals("")) {
        loanapplytcnewAF.setDeveloperPaybank(loanapplytcnewAF.getFundBank());
      }
      if (loanapplytcnewAF.getFundBankAcc() != null && !loanapplytcnewAF.getFundBank().equals("")) {
        loanapplytcnewAF.setDeveloperPaybankAAcc(loanapplytcnewAF
            .getFundBankAcc());
      }
      if (loanapplytcnewAF.getHouseType() != null
          && !"".equals(loanapplytcnewAF.getHouseType())) {
        if (loanapplytcnewAF.getHouseType().equals("01")) {//  «…Ã∆∑∑ø
          loanapplytcnewAF.setBargainorName("");
          loanapplytcnewAF.setBargainorHouseAddr("");
          loanapplytcnewAF.setBargainorPaybank("");
          loanapplytcnewAF.setBargainorPaybankAcc("");
          loanapplytcnewAF.setBargainorHouseArea("");
          loanapplytcnewAF.setBargainorTotlePrice("0");
          loanapplytcnewAF.setBargainorHouseAge("");

        } else {// ∂˛ ÷∑ø
          loanapplytcnewAF.setOrgName("");
          loanapplytcnewAF.setDeveloperPaybank("");
          loanapplytcnewAF.setDeveloperPaybankAAcc("");
          loanapplytcnewAF.setFloorId("");
          loanapplytcnewAF.setFloorNum("");
          loanapplytcnewAF.setRoomNum("");
          loanapplytcnewAF.setFirstPay("0");
          loanapplytcnewAF.setHouseTotlePrice("0");
          loanapplytcnewAF.setHouseArea("");
          loanapplytcnewAF.setHousePrice("0");
        }
      } else {
        loanapplytcnewAF.setBargainorName("");
        loanapplytcnewAF.setBargainorHouseAddr("");
        loanapplytcnewAF.setBargainorPaybank("");
        loanapplytcnewAF.setBargainorPaybankAcc("");
        loanapplytcnewAF.setBargainorHouseArea("");
        loanapplytcnewAF.setBargainorTotlePrice("0");
        loanapplytcnewAF.setBargainorHouseAge("");
        loanapplytcnewAF.setOrgName("");
        loanapplytcnewAF.setDeveloperPaybank("");
        loanapplytcnewAF.setDeveloperPaybankAAcc("");
        loanapplytcnewAF.setFloorId("");
        loanapplytcnewAF.setFloorNum("");
        loanapplytcnewAF.setRoomNum("");
        loanapplytcnewAF.setFirstPay("0");
        loanapplytcnewAF.setHouseTotlePrice("0");
        loanapplytcnewAF.setHouseArea("");
        loanapplytcnewAF.setHousePrice("0");
      }
      if (loanapplytcnewAF.getFloorId() == "") {
        loanapplytcnewAF.setFloorId("");
      } else {
        LoanapplyTcNewAF af = loanapplyBS.findSomeInfo(loanapplytcnewAF
            .getBuyhouseorgid(), loanapplytcnewAF.getFloorId(),
            loanapplytcnewAF.getDeveloperPaybankAAcc());
        loanapplytcnewAF.setFloorId(af.getFloorId());
        // ‘ˆº” ≤¶øÓø™ªß––£¨≤¶øÓø™ªß’À∫≈£¨»Áπ˚Ãÿ ‚…Ë∂®∫√∫Û£¨∏√œÓŒ™±ÿ ‰œÓ£¨«““‘∫Û¥Ú”°ø™∑¢…Ãø™ªß––∫Õ’À∫≈»°’‚¡Ω∏ˆ◊÷∂Œƒ⁄»›
        if (!"".equals(loanapplytcnewAF.getFundBank())
            && !"".equals(loanapplytcnewAF.getFundBankAcc())) {
          loanapplytcnewAF.setDeveloperPaybank(loanapplytcnewAF
              .getBanNamehidden());
        } else
          loanapplytcnewAF.setDeveloperPaybank(af.getDeveloperPaybank());
      }
      if (loanapplytcnewAF.getDeveloperTel() == null) {
        loanapplytcnewAF.setDeveloperTel("");
      }
      if (loanapplytcnewAF.getBuyHouseContractId() == null) {
        loanapplytcnewAF.setBuyHouseContractId("");
      }
      if (loanapplytcnewAF.getOverDate() == null) {
        loanapplytcnewAF.setOverDate("");
      }
      if (loanapplytcnewAF.getOrgName() == null) {
        loanapplytcnewAF.setOrgName("");
      }
      if (loanapplytcnewAF.getIsNowhouse() == null) {
        loanapplytcnewAF.setIsNowhouse("");
      } else {
        loanapplytcnewAF.setIsNowhouse(BusiTools.getBusiValue(Integer
            .parseInt(loanapplytcnewAF.getIsNowhouse()), BusiConst.YesNo));
      }
      if (loanapplytcnewAF.getAgreementDate() == null) {
        loanapplytcnewAF.setAgreementDate("");
      }
      if (loanapplytcnewAF.getHouseAddr() == null) {
        loanapplytcnewAF.setHouseAddr("");
      }
      if (loanapplytcnewAF.getBuildRightNum() == null) {
        loanapplytcnewAF.setBuildRightNum("");
      }
      if (loanapplytcnewAF.getRemark1() == null) {
        loanapplytcnewAF.setRemark1("");
      }
      if (loanapplytcnewAF.getBargainorCardNum() == null) {
        loanapplytcnewAF.setBargainorCardNum("");
      }
      if (loanapplytcnewAF.getBargainorTel() == null) {
        loanapplytcnewAF.setBargainorTel("");
      }
      if (loanapplytcnewAF.getBargainorMobile() == null) {
        loanapplytcnewAF.setBargainorMobile("");
      }
      if (loanapplytcnewAF.getBargainorHousepropertyCode() == null) {
        loanapplytcnewAF.setBargainorHousepropertyCode("");
      }
      if (loanapplytcnewAF.getBargainorCardKind() == null) {
        loanapplytcnewAF.setBargainorCardKind("");
      } else {
        loanapplytcnewAF.setBargainorCardKind(BusiTools.getBusiValue(Integer
            .parseInt(loanapplytcnewAF.getBargainorCardKind()),
            BusiConst.DOCUMENTSSTATE));
      }
      if (loanapplytcnewAF.getBargainorAgreementDate() == null) {
        loanapplytcnewAF.setBargainorAgreementDate("");
      }
      if (loanapplytcnewAF.getRemark2() == null) {
        loanapplytcnewAF.setRemark2("");
      }
      System.out.println(loanapplytcnewAF.getHouseType());
      if (loanapplytcnewAF.getHouseType() != null
          && !"".equals(loanapplytcnewAF.getHouseType())) {
        loanapplytcnewAF.setHouseType(BusiTools.getBusiValue_WL(
            loanapplytcnewAF.getHouseType(), BusiConst.PLHOUSETYPE));
      }
      request.setAttribute("loanapplytcnewAF", loanapplytcnewAF);
      LoanapplyTdNewAF loanapplytdnewAF = new LoanapplyTdNewAF();
      loanapplytdnewAF = loanapplyBS.printBorrowerLoanInfoByContractid(id,
          securityInfo);

      if (loanapplytdnewAF.getLoanMonthRate() != null) {
        loanapplytdnewAF.setLoanMonthRate(new BigDecimal(loanapplytdnewAF
            .getLoanMonthRate()).multiply(new BigDecimal(100))
            + "%");
        loanapplytdnewAF
            .setLoanMood(BusiTools.getBusiValue(Integer
                .parseInt(loanapplytdnewAF.getLoanMood()),
                BusiConst.PLRECOVERTYPE));
      } else {

        loanapplytdnewAF.setLoanMoney("0");
        loanapplytdnewAF.setLoanMonthRate("");
        loanapplytdnewAF.setLoantimeLimit("");
        loanapplytdnewAF.setLoanPoundage("");
        loanapplytdnewAF.setLoanMood("");
        loanapplytdnewAF.setCorpusInterest("");
      }
      request.setAttribute("loanapplytdnewAF", loanapplytdnewAF);
      LoanapplyTbNewAF ab = new LoanapplyTbNewAF();
      ab = loanapplyBS.findAssistanBorrowerInfo(id, securityInfo, null);
      if (ab.getOrg_Id() != null && !"".equals(ab.getOrgId())) {
        String orgRate = loanapplyBS.findOrgRate(ab.getOrgId() + "");
        if (orgRate != null) {
          ab.setOrgRate(orgRate);
        }
        String empRate = loanapplyBS.findEmpRate(ab.getOrgId() + "");
        if (empRate != null) {
          ab.setEmpRate(orgRate);
        }
      }
      if (ab.getSex() == null) {
        ab.setSex("");
      }
      if (!ab.getSex().equals("")) {
        ab.setSex(BusiTools.getBusiValue(Integer.parseInt(ab.getSex()),
            BusiConst.SEX));
        ab.setCardKind(BusiTools.getBusiValue(Integer
            .parseInt(ab.getCardKind()), BusiConst.DOCUMENTSSTATE));
      } else {
        ab.setSex("");
        ab.setCardKind("");
        ab.setName("");
        ab.setRelation("");
        ab.setCardNum("");
        ab.setBirthday("");
        ab.setMonthSalary("0");
      }
      String age = ab.getAge();
      if (age == null) {
        ab.setAge("");
      }
      // √Ò◊Â
      String nationst = ab.getNation();
      if (nationst == null) {
        ab.setNation("");
      }
      // –ﬁ∏ƒªßºÆÀ˘‘⁄µÿ
      String nationplacest = ab.getNativePlace();
      if (nationplacest == null) {
        ab.setNativePlace("");
      }
      // ÷∞ŒÒ
      String businessst = ab.getBusiness();
      if (businessst == null) {
        ab.setBusiness("");
      }
      // ÷∞≥∆
      String titlest = ab.getTitle();
      if (titlest == null) {
        ab.setTitle("");
      }
      // ªÈ“ˆ◊¥øˆ
      String marriages = ab.getMarriageSt();
      if (marriages == null) {
        ab.setMarriageSt("");
      }
      // ŒƒªØ≥Ã∂»
      String degreest = ab.getDegree();
      if (degreest == null) {
        ab.setDegree("");
      }
      // º“Õ•◊°÷∑
      String homeaddrst = ab.getHomeAddr();
      if (homeaddrst == null) {
        ab.setHomeAddr("");
      }
      // ” ’˛±‡¬Î
      String homemailst = ab.getHomeMail();
      if (homemailst == null) {
        ab.setHomeMail("");
      }
      // “∆∂ØµÁª∞
      String homemobilest = ab.getHomeMobile();
      if (homemobilest == null) {
        ab.setHomeMobile("");
      }
      // ◊°’¨µÁª∞
      String housetelb = ab.getHouseTel();
      if (housetelb == null) {
        ab.setHouseTel("");
      }
      // µ•Œª√˚≥∆
      String orgid = ab.getOrgId();
      if (orgid == null) {
        ab.setOrgId("");
      }

      // µ•Œª√˚≥∆
      String orgnamest = ab.getOrgName();
      if (orgnamest == null) {
        ab.setOrgName("");
      }
      // µ•Œªµÿ÷∑
      String orgaddrst = ab.getOrgAddr();
      if (orgaddrst == null) {
        ab.setOrgAddr("");
      }
      // µ•ŒªµÁª∞
      String orgtelst = ab.getOrgTel();
      if (orgtelst == null) {
        ab.setOrgTel("");
      }
      // µ•Œª” ±‡
      String orgmailst = ab.getOrgMail();
      if (orgmailst == null) {
        ab.setOrgMail("");
      }
      if (ab.getHomeMobile() == null) {
        ab.setHomeMobile("");
      }
      if (ab.getHouseTel() == null) {
        ab.setHouseTel("");
      }
      if (ab.getOrg_Id() == null) {
        ab.setOrg_Id("");
      }
      if (ab.getOrgName() == null) {
        ab.setOrgName("");
      }
      if (ab.getOrgTel() == null) {
        ab.setOrgTel("");
      }
      if (ab.getOrgAddr() == null) {
        ab.setOrgAddr("");
      }
      if (ab.getOrgMail() == null) {
        ab.setOrgMail("");
      }
      if (ab.getAccBlnce() == null) {
        ab.setAccBlnce("0");
      }
      if (ab.getMonthPay() == null) {
        ab.setMonthPay("0");
      }
      if (ab.getEmpSt() == null) {
        ab.setEmpSt("");
      }
      if (ab.getBgnDate() == null) {
        ab.setBgnDate("");
      }
      if (ab.getEndDate() == null) {
        ab.setEndDate("");
      }
      if (ab.getEmpId() == null) {
        ab.setEmpId("");
      }
      if (ab.getAccBlnce() == null) {
        ab.setAccBlnce("");
      }
      request.setAttribute("loanapplytbnewAF", ab);
    } catch (BusinessException be) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(be
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    } catch (Exception e) {
      e.printStackTrace();
    }
    return mapping.findForward("to_loanapplytable_cll");
  }

  /**
   * ªÿº˛»∑»œ
   * 
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return
   */
  public ActionForward redateSure(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    IdAF idAF = (IdAF) form;
    String id = idAF.getId().toString();
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");
    ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService(
        "loanapplyBS", this, mapping.getModuleConfig());
    ActionMessages messages = null;

    try {
      loanapplyBS.updateRedate(id, securityInfo);
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("»∑»œÕÍ±œ£°",
          false));
      saveErrors(request, messages);
    } catch (BusinessException e) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(e
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    } catch (Exception e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }

    return mapping.findForward("loanapplyteshowAC");
  }
  public ActionForward printsec_hand_house(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    IdAF idAF = (IdAF) form;
    String id = idAF.getId().toString();
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");
    ILoanapplyBS loanapplyBS = (ILoanapplyBS) BSUtils.getBusinessService(
        "loanapplyBS", this, mapping.getModuleConfig());
    ActionMessages messages = null;

    try {
      LoanapplyTcNewAF loanapplyTcNewAF = loanapplyBS.showBuyHouseInfoBycontractid(id, null);
      LoanapplyNewAF loanapplyNewAF = loanapplyBS.showLoanapplyInfoBycontractid(id, securityInfo);
      request.setAttribute("loanapplyNewAF", loanapplyNewAF);
      request.setAttribute("loanapplyTcNewAF", loanapplyTcNewAF);
      Date date = new Date();
      String bizDate = BusiTools.dateToString(date, "yyyy ƒÍ MM ‘¬ dd »’");
      request.setAttribute("bizDate", bizDate);
    } catch (BusinessException e) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(e
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
    } catch (Exception e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }

    return mapping.findForward("to_loanapplyte_printbargainor");
  }
}