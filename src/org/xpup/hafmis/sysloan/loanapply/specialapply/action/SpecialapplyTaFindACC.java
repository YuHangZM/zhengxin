/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.loanapply.specialapply.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.xpup.common.util.BSUtils;
import org.xpup.hafmis.common.util.BusiTools;
import org.xpup.hafmis.syscollection.common.domain.entity.Emp;
import org.xpup.hafmis.sysloan.common.domain.entity.SpecialBorrower;
import org.xpup.hafmis.sysloan.loanapply.specialapply.bsinterface.ISpecialapplyBS;
import org.xpup.hafmis.sysloan.loanapply.specialapply.dto.SpecialapplyDTO;

/**
 * MyEclipse Struts Creation date: 09-27-2007 XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class SpecialapplyTaFindACC extends Action {
  /*
   * Generated Methods
   */

  /**
   * Method execute
   * 
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return ActionForward
   */
  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    // TODO Auto-generated method stub
    response.setContentType("text/html;charset=UTF-8");
    response.setHeader("Cache-Control", "no-cache");
    try {
      // 借款人职工编号
      String empId = request.getParameter("privilegeBorrowerId");
      // 单位编号
      String org_Id = request.getParameter("org_Id");

      ISpecialapplyBS specialapplyBS = (ISpecialapplyBS) BSUtils
          .getBusinessService("specialapplyBS", this, mapping.getModuleConfig());

      SpecialBorrower specialBorrower = null;
      Emp emp = null;
      SpecialapplyDTO specialapplyDTO = null;

      // 借款人编号
      String privilegeBorrowerId = "";
      // 借款人姓名
      String borrowerName = "";
      // 证件类型
      String cardKind = "";
      // 证件号码
      String cardNum = "";
      // 单位编号
      String orgId = "";
      // 单位名称
      String orgName = "";
      // 贷款期限
      String loanTimeLimit = "";

      String bankName = "";

      String bankAcc = "";

      String remark = "";
      // 贷款金额
      String loanMoney = "";
      // 判断该人在特殊借款人信息表PL112中的特殊借款状态是否等于0.未启用 (** 另一种用法 **页面按钮可用状态 ===
      // 1可用，2不可用**)
      String error = "0";

      // 特殊借款人信息表PL112是否存借款人职工编号等于选择的职工编号的记录
      boolean is_temp = specialapplyBS.isCheckSpecialBorrowerByEmpId(empId)
          .booleanValue();
      // pl112表里有职工记录
      if (is_temp) {
        // 判断该人在特殊借款人信息表PL112中的特殊借款状态等于0
        specialBorrower = specialapplyBS.findSpecialBorrowerStutasByEmpId(
            empId, org_Id);
        // 特殊借款状态等于0
        if (specialBorrower != null) {
          privilegeBorrowerId = empId;
          borrowerName = specialBorrower.getBorrowerName();
          cardKind = specialBorrower.getCardKind();
          cardNum = specialBorrower.getCardNum();
          orgId = specialBorrower.getOrgId().toString();
          orgName = specialBorrower.getOrgName();
          loanTimeLimit = specialBorrower.getLoanTimeLimit();
          loanMoney = specialBorrower.getLoanMoney().toString();
          bankName = specialBorrower.getPerBank() == null ? "" : specialBorrower.getPerBank();
          bankAcc = specialBorrower.getPerBankAcc() == null ? "" : specialBorrower.getPerBankAcc();
          remark = specialBorrower.getReserveaA() == null ? "" : specialBorrower.getReserveaA();
        } else {// 特殊借款状态等于1
          emp = specialapplyBS.findEmpById(empId, org_Id);
          // 有记录
          if (emp != null) {
            specialapplyDTO = specialapplyBS.findSpecialapplyInfoById(empId,
                org_Id);
            privilegeBorrowerId = empId;
            borrowerName = specialapplyDTO.getBorrowerName();
            cardKind = specialapplyDTO.getCardKind();
            cardNum = specialapplyDTO.getCardNum();
            orgId = new Integer(org_Id).toString();
            orgName = specialapplyDTO.getOrgName();
          } else {// 没有记录
            System.out.println("EMP表里没有数据");
          }
        }
      } else {// pl112表里没有职工记录
        // 根据 职工编号和单位编号 查找AA002表里的数据记录
        emp = specialapplyBS.findEmpById(empId, org_Id);
        // 有记录
        if (emp != null) {
          specialapplyDTO = specialapplyBS.findSpecialapplyInfoById(empId,
              org_Id);
          privilegeBorrowerId = empId;
          borrowerName = specialapplyDTO.getBorrowerName();
          cardKind = specialapplyDTO.getCardKind();
          cardNum = specialapplyDTO.getCardNum();
          orgId = new Integer(org_Id).toString();
          orgName = specialapplyDTO.getOrgName();
        } else {// 没有记录
          System.out.println("EMP表里没有数据");
        }
      }
      privilegeBorrowerId = BusiTools.convertSixNumber(privilegeBorrowerId);
      orgId = BusiTools.convertTenNumber(orgId);
      String text = "displays('" + privilegeBorrowerId + "','" + borrowerName
          + "','" + cardKind + "','" + cardNum + "','" + orgId + "','"
          + orgName + "','" + loanTimeLimit + "','" + loanMoney + "','"
          + bankName + "','" + bankAcc + "','" + remark + "','" + error + "')";
      response.getWriter().write(text);
      response.getWriter().close();

    } catch (Exception ex) {
      ex.printStackTrace();
    }
    return null;
  }
}