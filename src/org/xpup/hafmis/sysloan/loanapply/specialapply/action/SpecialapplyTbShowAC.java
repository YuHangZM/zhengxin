/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.loanapply.specialapply.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.Pagination;
import org.xpup.common.util.PaginationUtils;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysloan.loanapply.specialapply.bsinterface.ISpecialapplyBS;
import org.xpup.hafmis.sysloan.loanapply.specialapply.form.SpecialapplyTbAF;

/** 
 * MyEclipse Struts
 * Creation date: 09-29-2007
 * 
 * XDoclet definition:
 * @struts.action path="/specialapplyTbShowAC" name="idAF" scope="request" validate="true"
 */
public class SpecialapplyTbShowAC extends Action {
	/*
	 * Generated Methods
	 */
  
  public static final String PAGINATION_KEY = "org.xpup.hafmis.sysloan.loanapply.specialapply.action.SpecialapplyTbShowAC";

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
    
    try {
      SpecialapplyTbAF specialapplyTbAF = new SpecialapplyTbAF();
      List list = new ArrayList();
      
      Pagination pagination = getPagination(PAGINATION_KEY, request);
      String empId = (String) pagination.getQueryCriterions().get(
          "empId");
      String borrowerName = (String) pagination.getQueryCriterions().get(
          "borrowerName");
      String cardNum = (String) pagination.getQueryCriterions().get("cardNum");
      
      int count = 0;
      int allCount = 0;
      if (empId != null && !"".equals(empId)) {
        specialapplyTbAF.setPrivilegeBorrowerId(empId);
      }
      if (borrowerName != null && !"".equals(borrowerName)) {
        specialapplyTbAF.setBorrowerName(borrowerName);
      }
      if (cardNum != null && !"".equals(cardNum)) {
        specialapplyTbAF.setCardNum(cardNum);
      }
      PaginationUtils.updatePagination(pagination, request);
      ISpecialapplyBS specialapplyBS = (ISpecialapplyBS) BSUtils.getBusinessService(
          "specialapplyBS", this, mapping.getModuleConfig());
      //Session 里面拿出权限和数据
      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");
      String operator = securityInfo.getUserName();// 操作员
      //返回查询结果(List) 特殊借款人信息
      list = specialapplyBS.findSpecialapplyList(pagination,operator);
      
      //查询pl112中的条件 记录条数
      count = specialapplyBS.findSpecialapplyCount(empId, borrowerName, cardNum,operator);
      //查询pl112中的记录 总条数
      allCount = specialapplyBS.findSpecialapplyAllCount();
      if(allCount>0){
        //查找按钮不禁用，如果allcount 小于1 那么就禁用
        request.setAttribute("specialapplyTbFind", "1");
      }
      pagination.setNrOfElements(count);
      specialapplyTbAF.setList(list);
      request.setAttribute("specialapplyTbAF", specialapplyTbAF);
      specialapplyTbAF.reset(mapping, request);
    } catch (Exception e) {
      e.printStackTrace();
    }
    return mapping.findForward("to_specialapply_show");
  }

  private Pagination getPagination(String paginationKey,
      HttpServletRequest request) {
    Pagination pagination = (Pagination) request.getSession().getAttribute(
        paginationKey);
    if (pagination == null) {
      pagination = new Pagination(0, 10, 1, "p2.privilege_borrower_id", "DESC", new HashMap(0));
      request.getSession().setAttribute(paginationKey, pagination);
    }
    return pagination;
  }
}