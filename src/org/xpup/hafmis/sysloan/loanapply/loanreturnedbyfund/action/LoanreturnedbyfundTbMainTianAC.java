/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.action;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.actions.LookupDispatchAction;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.Pagination;
import org.xpup.hafmis.common.form.IdAF;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.bsinterface.ILoanreturnedbyfundBS;

/**
 * MyEclipse Struts Creation date: 09-26-2007 XDoclet definition:
 * 
 * @struts.action path="loanapplytbtopmaintianAC" name="idAF" scope="request"
 *                validate="true"
 */
public class LoanreturnedbyfundTbMainTianAC extends LookupDispatchAction {

  protected Map getKeyMethodMap() {
    Map map = new HashMap();
    map.put("button.update", "update");
    map.put("button.delete", "delete");
    map.put("button.deleteall", "deleteall");
    map.put("button.print", "print");
    map.put("button.revert", "revert");
    map.put("button.revert.print", "revertprint");
    map.put("button.print.list", "printlist");
    map.put("button.use", "use");
    return map;
  }

  public ActionForward update(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {

    try {
      IdAF idAF = (IdAF) form;
      String id = idAF.getId().toString();
      String str[]=id.split(",");
      ILoanreturnedbyfundBS loanreturnedbyfundBS = (ILoanreturnedbyfundBS) BSUtils
          .getBusinessService("loanreturnedbyfundBS", this, mapping
              .getModuleConfig());
      Object[] obj = loanreturnedbyfundBS
          .LoanreturnedbyfundTbCountListByContractId(str[0]);
      List list = (List) obj[0];
      String office = (String) obj[1];
      request.getSession().setAttribute("contractId", str[0]);
      request.getSession().setAttribute("seqList", list);
      request.getSession().setAttribute("office", office);
      request.setAttribute("update", "1");
    } catch (Exception e) {
      // TODO: handle exception
      e.printStackTrace();
    }

    return mapping.findForward("to_showloanreturnedbyfundTa");
  }

  //
  public ActionForward use(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws BusinessException {
    ActionMessages messages = null;
    try {
      IdAF idAF = (IdAF) form;
      String id = idAF.getId().toString();
      String str[]=id.split(",");
      ILoanreturnedbyfundBS loanreturnedbyfundBS = (ILoanreturnedbyfundBS) BSUtils
          .getBusinessService("loanreturnedbyfundBS", this, mapping
              .getModuleConfig());
      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");
      loanreturnedbyfundBS.useLoanreturnedbyfundTbInfo(str[0], securityInfo);
    } catch (BusinessException e) {
      e.printStackTrace();
      request.setAttribute("error", e.getMessage());
      messages = new ActionMessages();
      messages.add("启用失败!", new ActionMessage(e.getMessage(), false));
      saveErrors(request, messages);
      return mapping.findForward("to_showloanreturnedbyfundTb");
    } catch (Exception e) {
      e.printStackTrace();
    }
    return mapping.findForward("to_showloanreturnedbyfundTb");
  }

  public ActionForward delete(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws BusinessException {
    ActionMessages messages = null;
    try {
      IdAF idAF = (IdAF) form;
      String id = idAF.getId().toString();
      String str[]=id.split(",");
      ILoanreturnedbyfundBS loanreturnedbyfundBS = (ILoanreturnedbyfundBS) BSUtils
          .getBusinessService("loanreturnedbyfundBS", this, mapping
              .getModuleConfig());
      loanreturnedbyfundBS.deleteLoanreturnedbyfundTbInfo(str[0],str[1]);
    } catch (BusinessException e) {
      e.printStackTrace();
      request.setAttribute("error", e.getMessage());
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(e
          .getMessage(), false));
      saveErrors(request, messages);
      return mapping.findForward("to_showloanreturnedbyfundTb");
    } catch (Exception e) {
      // TODO: handle exception
      e.printStackTrace();
    }
    return mapping.findForward("to_showloanreturnedbyfundTb");
  }

  public ActionForward deleteall(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws BusinessException {

    try {
      Pagination pagination = getPagination(
          LoanreturnedbyfundTbShowAC.PAGINATION_KEY, request);
      ILoanreturnedbyfundBS loanreturnedbyfundBS = (ILoanreturnedbyfundBS) BSUtils
          .getBusinessService("loanreturnedbyfundBS", this, mapping
              .getModuleConfig());
      loanreturnedbyfundBS.deleteAllLoanreturnedbyfundTbInfo(pagination);
    } catch (Exception e) {
      // TODO: handle exception
      e.printStackTrace();
    }
    return mapping.findForward("to_showloanreturnedbyfundTb");
  }

  public ActionForward revert(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws BusinessException {

    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");
    String date_temp = securityInfo.getUserInfo().getPlbizDate();
    try {
      IdAF idAF = (IdAF) form;
      String id = idAF.getId().toString();
      String str[]=id.split(",");
      Pagination pagination = getPagination(
          LoanreturnedbyfundTbShowAC.PAGINATION_KEY, request);
      ILoanreturnedbyfundBS loanreturnedbyfundBS = (ILoanreturnedbyfundBS) BSUtils
          .getBusinessService("loanreturnedbyfundBS", this, mapping
              .getModuleConfig());
      loanreturnedbyfundBS.updateLoanreturnedbyfund_1(str[0], date_temp);
    } catch (Exception e) {
      // TODO: handle exception
      e.printStackTrace();
    }
    return mapping.findForward("to_showloanreturnedbyfundTb");
  }

  public ActionForward print(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws BusinessException {
//    ActionMessages messages = null;
//    String Status = "";
    try {
      IdAF idAF = (IdAF) form;
      String id = idAF.getId().toString();
//      System.out.println("v..."+id);
      String str[]=id.split(",");
//      ILoanreturnedbyfundBS loanreturnedbyfundBS = (ILoanreturnedbyfundBS) BSUtils
//          .getBusinessService("loanreturnedbyfundBS", this, mapping
//              .getModuleConfig());
//      Status = loanreturnedbyfundBS.find_print_status(str[0]);
      request.getSession().setAttribute("contract_id", str[0]);
      request.getSession().setAttribute("Status", "1");

//    } catch (BusinessException e) {
//      e.printStackTrace();
//      request.setAttribute("error", e.getMessage());
//      messages = new ActionMessages();
//      messages.add("打印失败!", new ActionMessage(e.getMessage(), false));
//      saveErrors(request, messages);
//      return mapping.findForward("to_showloanreturnedbyfundTb");
    } catch (Exception e) {
      e.printStackTrace();
    }
    return mapping.findForward("to_print");
  }

  public ActionForward revertprint(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws BusinessException {
    ActionMessages messages = null;
    String Status = "";
    try {
      IdAF idAF = (IdAF) form;
      String id = idAF.getId().toString();
      String str[]=id.split(",");
      ILoanreturnedbyfundBS loanreturnedbyfundBS = (ILoanreturnedbyfundBS) BSUtils
          .getBusinessService("loanreturnedbyfundBS", this, mapping
              .getModuleConfig());
      System.out.println("get id =" + id);
      Status = loanreturnedbyfundBS.find_print_status(str[0]);
      request.getSession().setAttribute("contract_id", str[0]);
      request.getSession().setAttribute("Status", "0");

    } catch (BusinessException e) {
      e.printStackTrace();
      request.setAttribute("error", e.getMessage());
      messages = new ActionMessages();
      messages.add("打印失败!", new ActionMessage(e.getMessage(), false));
      saveErrors(request, messages);
      return mapping.findForward("to_showloanreturnedbyfundTb");
    } catch (Exception e) {
      e.printStackTrace();
    }
    return mapping.findForward("to_print");
  }

  public ActionForward printlist(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws BusinessException {
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");
    String date_temp = securityInfo.getUserInfo().getPlbizDate();
    String name = securityInfo.getUserInfo().getRealName();

    request.getSession().setAttribute(
        "date_temp",
        date_temp.substring(0, 4) + "年" + date_temp.substring(4, 6) + "月"
            + date_temp.substring(6, 8) + "日");
    request.getSession().setAttribute("print_name", name);

    return mapping.findForward("to_showloanreturnedbyfundTb_print");
  }

  private Pagination getPagination(String paginationKey,
      HttpServletRequest request) {
    Pagination pagination = (Pagination) request.getSession().getAttribute(
        paginationKey);
    if (pagination == null) {
      HashMap m = new HashMap();
      pagination = new Pagination(0, 10, 1, "a.id", "DESC", m);
      request.getSession().setAttribute(paginationKey, pagination);
    }
    return pagination;
  }
}