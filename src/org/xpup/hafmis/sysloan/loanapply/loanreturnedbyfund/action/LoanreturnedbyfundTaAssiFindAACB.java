/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.action;



import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.xpup.common.util.BSUtils;
import org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.bsinterface.ILoanreturnedbyfundBS;
import org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.dto.EmpinfoDto;
import org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.form.LoanreturnedbyfundTaAF;

/**
 * MyEclipse Struts Creation date: 09-21-2007 XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class LoanreturnedbyfundTaAssiFindAACB extends Action {

  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    response.setContentType("text/html;charset=UTF-8");
    response.setHeader("Cache-Control", "no-cache");
    LoanreturnedbyfundTaAF af=null;
    try {
      af=(LoanreturnedbyfundTaAF)request.getSession().getAttribute("loanreturnedbyfundTaAF");
      String borrowerEmpId_s = (String) request.getParameter("borrowerEmpId_t");
      String orgid_s = (String) request.getParameter("orgid_t");
      String again = (String) request.getParameter("again");
      String name_s = af.getName();
      String name_sa = af.getNamea();
      String name_sb = af.getNameb();
      String cradnum_s = af.getCardNum();
      String cradnum_sa = af.getCardNuma();
      String cradnum_sb = af.getCardNumb();
      
      String contractId=af.getContractId();
      String time = (String) request.getParameter("time");
      EmpinfoDto assistantBorrower=new EmpinfoDto();
      try {
        ILoanreturnedbyfundBS loanreturnedbyfundBS = (ILoanreturnedbyfundBS) BSUtils.getBusinessService(
            "loanreturnedbyfundBS", this, mapping.getModuleConfig());
        String text = "";
        if(again!=null && again.equals("again")){
          assistantBorrower=loanreturnedbyfundBS.queryEmpInfo_s(orgid_s,borrowerEmpId_s,name_s,name_sa,name_sb,cradnum_s,cradnum_sa,cradnum_sb);
        }else{
          assistantBorrower=loanreturnedbyfundBS.queryEmpInfo_s_wsh(orgid_s,borrowerEmpId_s,name_s,name_sa,name_sb,cradnum_s,cradnum_sa,cradnum_sb);
        }
        assistantBorrower.setEmpid_s(borrowerEmpId_s); 
        assistantBorrower.setOrgid_s(orgid_s); 
        
        text = "displays('" + contractId + "')";
        response.getWriter().write(text);
        response.getWriter().close();
        if(time!=null){
          request.getSession().setAttribute("time", time);
        }
        request.getSession().setAttribute("contractId", contractId);
        request.getSession().setAttribute("empinfoDto_sb", assistantBorrower);
      } catch (Exception e) {
        String text = "";
        text = "display4('" + e.getLocalizedMessage().toString() + "')";
        response.getWriter().write(text);
        response.getWriter().close();
      }
    } catch (Exception e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }
    return null;
  }
}