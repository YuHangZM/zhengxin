/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.action;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.xpup.common.exception.BusinessException;
import org.xpup.common.util.BSUtils;
import org.xpup.hafmis.orgstrct.dto.OfficeDto;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysloan.common.domain.entity.AssistantBorrower;
import org.xpup.hafmis.sysloan.common.domain.entity.Borrower;
import org.xpup.hafmis.sysloan.common.domain.entity.BorrowerAcc;
import org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.bsinterface.ILoanreturnedbyfundBS;
import org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.dto.EmpinfoDto;
import org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.form.LoanreturnedbyfundTaAF;

public class LoanreturnedbyfundTaShowAC extends Action {

  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response)
      throws Exception, BusinessException {

    LoanreturnedbyfundTaAF loanreturnedbyfundTaAF = new LoanreturnedbyfundTaAF();
    loanreturnedbyfundTaAF.reset();
    List list = new ArrayList();
    List list_fuzhuren = new ArrayList();
    Borrower borrower = new Borrower();
    AssistantBorrower assistantBorrower = new AssistantBorrower();
    ActionMessages messages = null;
    ILoanreturnedbyfundBS loanreturnedbyfundBS = (ILoanreturnedbyfundBS) BSUtils
        .getBusinessService("loanreturnedbyfundBS", this, mapping
            .getModuleConfig());
    SecurityInfo securityInfo = (SecurityInfo) request.getSession()
        .getAttribute("SecurityInfo");

    String time = securityInfo.getUserInfo().getPlbizDate();
    loanreturnedbyfundTaAF.setBizTime(time);
    // 求办事处
    List temp_officeList = securityInfo.getOfficeList();
    List li = new ArrayList();
    for (int i = 0; i < temp_officeList.size(); i++) {
      OfficeDto officedto = null;
      officedto = (OfficeDto) temp_officeList.get(i);
      li.add(new org.apache.struts.util.LabelValueBean(officedto
          .getOfficeName(), officedto.getOfficeCode()));
    }
    request.setAttribute("officeList", li);
    try {
      String contractId = (String) request.getSession().getAttribute(
          "contractId");
      Integer count = new Integer(0);
      if (contractId != null && !"".equals(contractId)) {
        count = loanreturnedbyfundBS.LoanreturnedbyfundTbCheck(contractId);
      }

      // 新增
      if (count.intValue() == 0) {

        if (contractId != null) {

          borrower = loanreturnedbyfundBS.showLoanapplyInfoBycontractid(
              contractId, securityInfo);
          String value = "";
          value = loanreturnedbyfundBS.LoanreturnedbyfundCheck(borrower
              .getOffice(), "5");

          // * 查询办事处是否可以为辅助借款人扣款
//          assistantBorrower = loanreturnedbyfundBS
//              .findAssistanBorrower(contractId);
          List listAssistantBorrower = loanreturnedbyfundBS
              .queryByBorrowerByEmpId_yg(contractId);

          if (list_fuzhuren.size() > 0) {
            assistantBorrower = (AssistantBorrower) list_fuzhuren.get(0);
          }

          if ("0".equals(value)) {
            list = loanreturnedbyfundBS.findAssistanBorrowerInfo(contractId);
            loanreturnedbyfundTaAF.setList(list);
          }

          loanreturnedbyfundTaAF.setBorrowerName(borrower.getBorrowerName());
          loanreturnedbyfundTaAF.setBorrower_cardKind("身份证");
          loanreturnedbyfundTaAF.setBorrower_cardNum(borrower.getCardNum());
          if (listAssistantBorrower != null) {
            if (listAssistantBorrower.size()>2) {
              AssistantBorrower assistantBorrowerc = new AssistantBorrower();
              assistantBorrowerc=(AssistantBorrower)listAssistantBorrower.get(2);
              loanreturnedbyfundTaAF.setNameb(assistantBorrowerc.getName());
              loanreturnedbyfundTaAF.setCardKindb("身份证");
              loanreturnedbyfundTaAF.setCardNumb(assistantBorrowerc
                  .getCardNum());
            }
            if (listAssistantBorrower.size()>1) {
              AssistantBorrower assistantBorrowerb = new AssistantBorrower();
              assistantBorrowerb=(AssistantBorrower)listAssistantBorrower.get(1);
              loanreturnedbyfundTaAF.setNamea(assistantBorrowerb.getName());
              loanreturnedbyfundTaAF.setCardKinda("身份证");
              loanreturnedbyfundTaAF.setCardNuma(assistantBorrowerb
                  .getCardNum());
            }
            if (listAssistantBorrower.size()>0) {
              AssistantBorrower assistantBorrowera = new AssistantBorrower();
              assistantBorrowera=(AssistantBorrower)listAssistantBorrower.get(0);
              loanreturnedbyfundTaAF.setName(assistantBorrowera.getName());
              loanreturnedbyfundTaAF.setCardKind("身份证");
              loanreturnedbyfundTaAF
                  .setCardNum(assistantBorrowera.getCardNum());
            }
          } else {
            loanreturnedbyfundTaAF.setName("");
            loanreturnedbyfundTaAF.setCardKind("");
            loanreturnedbyfundTaAF.setCardNum("");
            loanreturnedbyfundTaAF.setNamea("");
            loanreturnedbyfundTaAF.setCardKinda("");
            loanreturnedbyfundTaAF.setCardNuma("");
            loanreturnedbyfundTaAF.setNameb("");
            loanreturnedbyfundTaAF.setCardKindb("");
            loanreturnedbyfundTaAF.setCardNumb("");
          }

          loanreturnedbyfundTaAF.setContractId(borrower.getContractId());

          if (request.getSession().getAttribute("empinfoDto") != null) {
            EmpinfoDto empidfodto = new EmpinfoDto();
            empidfodto = (EmpinfoDto) request.getSession().getAttribute(
                "empinfoDto");
            loanreturnedbyfundTaAF.setBorrow_empid(empidfodto.getEmpid());
            loanreturnedbyfundTaAF.setBorrow_orgid(empidfodto.getOrgid());
            loanreturnedbyfundTaAF.setBorrow_ablncc(empidfodto.getAblence()
                .toString());
            loanreturnedbyfundTaAF.setBorrow_orgname(empidfodto.getOrg_name());
            loanreturnedbyfundTaAF.setBorrow_orgtel(empidfodto.getOrg_tel());
            loanreturnedbyfundTaAF
                .setBorrow_orgadder(empidfodto.getOrg_adder());
            loanreturnedbyfundTaAF.setBorrow_office(empidfodto.getOffice());
            loanreturnedbyfundTaAF.setBorrow_monthsal(empidfodto.getMonth_sal()
                .toString());
            loanreturnedbyfundTaAF.setBorrow_monthpay(empidfodto.getMonth_pay()
                .toString());
            loanreturnedbyfundTaAF.setBorrow_enddate(empidfodto.getNow_pay());
            loanreturnedbyfundTaAF
                .setBorrow_bingdate(empidfodto.getFirst_pay());
            loanreturnedbyfundTaAF.setBorrow_st(empidfodto.getEmp_status());

          }

          if (request.getSession().getAttribute("empinfoDto_s") != null) {
            EmpinfoDto empidfodto_s = new EmpinfoDto();
            empidfodto_s = (EmpinfoDto) request.getSession().getAttribute(
                "empinfoDto_s");
            loanreturnedbyfundTaAF.setBorrow_s_empname(empidfodto_s.getEmp_name_s());
            loanreturnedbyfundTaAF.setBorrow_s_cardnum(empidfodto_s.getEmp_card_num_s());
            loanreturnedbyfundTaAF.setBorrow_s_empid(empidfodto_s.getEmpid_s());
            loanreturnedbyfundTaAF.setBorrow_s_orgid(empidfodto_s.getOrgid_s());
            loanreturnedbyfundTaAF.setBorrow_s_ablncc(empidfodto_s
                .getAblence_s().toString());
            loanreturnedbyfundTaAF.setBorrow_s_orgname(empidfodto_s
                .getOrg_name_s());
            loanreturnedbyfundTaAF.setBorrow_s_orgtel(empidfodto_s
                .getOrg_tel_s());
            loanreturnedbyfundTaAF.setBorrow_s_orgadder(empidfodto_s
                .getOrg_adder_s());
            loanreturnedbyfundTaAF.setBorrow_s_office(empidfodto_s
                .getOffice_s());
            loanreturnedbyfundTaAF.setBorrow_s_monthsal(empidfodto_s
                .getMonth_sal_s().toString());
            loanreturnedbyfundTaAF.setBorrow_s_monthpay(empidfodto_s
                .getMonth_pay_s().toString());
            loanreturnedbyfundTaAF.setBorrow_s_enddate(empidfodto_s
                .getNow_pay_s());
            loanreturnedbyfundTaAF.setBorrow_s_bingdate(empidfodto_s
                .getFirst_pay_s());
            loanreturnedbyfundTaAF.setBorrow_s_st(empidfodto_s
                .getEmp_status_s());

          }
          if (request.getSession().getAttribute("empinfoDto_sa") != null) {
            EmpinfoDto empidfodto_sa = new EmpinfoDto();
            empidfodto_sa = (EmpinfoDto) request.getSession().getAttribute(
                "empinfoDto_sa");
            loanreturnedbyfundTaAF.setBorrow_s_empnamea(empidfodto_sa.getEmp_name_s());
            loanreturnedbyfundTaAF.setBorrow_s_cardnuma(empidfodto_sa.getEmp_card_num_s());
            loanreturnedbyfundTaAF.setBorrow_s_empida(empidfodto_sa
                .getEmpid_s());
            loanreturnedbyfundTaAF.setBorrow_s_orgida(empidfodto_sa
                .getOrgid_s());
            loanreturnedbyfundTaAF.setBorrow_s_ablncca(empidfodto_sa
                .getAblence_s().toString());
            loanreturnedbyfundTaAF.setBorrow_s_orgnamea(empidfodto_sa
                .getOrg_name_s());
            loanreturnedbyfundTaAF.setBorrow_s_orgtela(empidfodto_sa
                .getOrg_tel_s());
            loanreturnedbyfundTaAF.setBorrow_s_orgaddera(empidfodto_sa
                .getOrg_adder_s());
            loanreturnedbyfundTaAF.setBorrow_s_officea(empidfodto_sa
                .getOffice_s());
            loanreturnedbyfundTaAF.setBorrow_s_monthsala(empidfodto_sa
                .getMonth_sal_s().toString());
            loanreturnedbyfundTaAF.setBorrow_s_monthpaya(empidfodto_sa
                .getMonth_pay_s().toString());
            loanreturnedbyfundTaAF.setBorrow_s_enddatea(empidfodto_sa
                .getNow_pay_s());
            loanreturnedbyfundTaAF.setBorrow_s_bingdatea(empidfodto_sa
                .getFirst_pay_s());
            loanreturnedbyfundTaAF.setBorrow_s_sta(empidfodto_sa
                .getEmp_status_s());

          }
          if (request.getSession().getAttribute("empinfoDto_sb") != null) {
            EmpinfoDto empidfodto_sb = new EmpinfoDto();
            empidfodto_sb = (EmpinfoDto) request.getSession().getAttribute(
                "empinfoDto_sb");
            loanreturnedbyfundTaAF.setBorrow_s_empnameb(empidfodto_sb.getEmp_name_s());
            loanreturnedbyfundTaAF.setBorrow_s_cardnumb(empidfodto_sb.getEmp_card_num_s());
            loanreturnedbyfundTaAF.setBorrow_s_empidb(empidfodto_sb
                .getEmpid_s());
            loanreturnedbyfundTaAF.setBorrow_s_orgidb(empidfodto_sb
                .getOrgid_s());
            loanreturnedbyfundTaAF.setBorrow_s_ablnccb(empidfodto_sb
                .getAblence_s().toString());
            loanreturnedbyfundTaAF.setBorrow_s_orgnameb(empidfodto_sb
                .getOrg_name_s());
            loanreturnedbyfundTaAF.setBorrow_s_orgtelb(empidfodto_sb
                .getOrg_tel_s());
            loanreturnedbyfundTaAF.setBorrow_s_orgadderb(empidfodto_sb
                .getOrg_adder_s());
            loanreturnedbyfundTaAF.setBorrow_s_officeb(empidfodto_sb
                .getOffice_s());
            loanreturnedbyfundTaAF.setBorrow_s_monthsalb(empidfodto_sb
                .getMonth_sal_s().toString());
            loanreturnedbyfundTaAF.setBorrow_s_monthpayb(empidfodto_sb
                .getMonth_pay_s().toString());
            loanreturnedbyfundTaAF.setBorrow_s_enddateb(empidfodto_sb
                .getNow_pay_s());
            loanreturnedbyfundTaAF.setBorrow_s_bingdateb(empidfodto_sb
                .getFirst_pay_s());
            loanreturnedbyfundTaAF.setBorrow_s_stb(empidfodto_sb
                .getEmp_status_s());

          }

          // 新增页面显示字段
          // 若有辅助借款人
          BigDecimal moneyYue = new BigDecimal("0.00");// 借款人的最大提取金额
          BigDecimal moneyYue_s = new BigDecimal("0.00");// 借款人的最大提取金额
          BigDecimal yue = new BigDecimal("0");
          BigDecimal yue_s = new BigDecimal(0);
          BorrowerAcc borrowerAcc = loanreturnedbyfundBS
              .findBorrowerAcc(borrower.getContractId());

          // BorrowerLoanInfo
          // borrowerLoanInfo=loanreturnedbyfundBS.findBorrowerLoanInfo(borrower.getContractId());
          // System.out.println("contractId="+contractId+"--------securityInfo.getUserInfo().getPlbizDate()="+securityInfo.getUserInfo().getPlbizDate());
          String CorpusInterest = loanreturnedbyfundBS
              .find_pl201_CorpusInterest(contractId, securityInfo.getUserInfo()
                  .getPlbizDate());
          String CorpusInterest_other = loanreturnedbyfundBS
              .find_pl201_CorpusInterest_other(contractId, securityInfo
                  .getUserInfo().getPlbizDate());
          if (borrowerAcc != null) {
            // 月还本息

            if (new BigDecimal(CorpusInterest).intValue() > 0) {
              loanreturnedbyfundTaAF.setYueHuanBenXi(CorpusInterest);
            } else {
              if (new BigDecimal(CorpusInterest_other.toString()).intValue() > 0) {
                loanreturnedbyfundTaAF.setYueHuanBenXi(CorpusInterest_other);
              } else {
                loanreturnedbyfundTaAF.setYueHuanBenXi("1");
              }
            }

            // 主+辅
            if (loanreturnedbyfundTaAF.getBorrow_empid() != null
                && !loanreturnedbyfundTaAF.getBorrow_empid().equals("")
                && loanreturnedbyfundTaAF.getBorrow_s_empid() != null
                && !loanreturnedbyfundTaAF.getBorrow_s_empid().equals("")) {

              moneyYue = new BigDecimal(loanreturnedbyfundTaAF
                  .getBorrow_ablncc()).subtract(new BigDecimal(
                  loanreturnedbyfundTaAF.getBorrow_monthpay())
                  .multiply(new BigDecimal(12)));
              moneyYue = moneyYue.setScale(2, BigDecimal.ROUND_DOWN);
              moneyYue_s = new BigDecimal(loanreturnedbyfundTaAF
                  .getBorrow_s_ablncc()).subtract(new BigDecimal(
                  loanreturnedbyfundTaAF.getBorrow_s_monthpay())
                  .multiply(new BigDecimal(12)));
              moneyYue_s = moneyYue_s.setScale(2, BigDecimal.ROUND_DOWN);
              if (moneyYue.intValue() > 0) {
                moneyYue = moneyYue.setScale(2, BigDecimal.ROUND_DOWN);
              } else {
                moneyYue = new BigDecimal(0);
              }
              if (moneyYue_s.intValue() > 0) {
                moneyYue_s = moneyYue_s.setScale(2, BigDecimal.ROUND_DOWN);
              } else {
                moneyYue_s = new BigDecimal(0);
              }

              loanreturnedbyfundTaAF.setMaxPickMoney(moneyYue);
              loanreturnedbyfundTaAF.setMaxPickMoney_assist(moneyYue_s);
              // 辅助借款人最大提取金额
              yue = loanreturnedbyfundTaAF.getMaxPickMoney().divide(
                  new BigDecimal(loanreturnedbyfundTaAF.getYueHuanBenXi()), 0,
                  BigDecimal.ROUND_DOWN);
              if (yue.intValue() > 0) {
                loanreturnedbyfundTaAF.setMaxMonth(yue.toString());
              } else {
                loanreturnedbyfundTaAF.setMaxMonth("0");
              }
              yue_s = loanreturnedbyfundTaAF.getMaxPickMoney_assist().divide(
                  new BigDecimal(loanreturnedbyfundTaAF.getYueHuanBenXi()), 0,
                  BigDecimal.ROUND_DOWN);
              if (yue_s.intValue() > 0) {
                loanreturnedbyfundTaAF.setMaxMonth_assist(yue_s.toString());
              } else {
                loanreturnedbyfundTaAF.setMaxMonth_assist("0");
              }

            } else {

              // 借款人月提取最大金额
              if (loanreturnedbyfundTaAF.getBorrow_empid() != null
                  && !loanreturnedbyfundTaAF.getBorrow_empid().equals("")) {
                moneyYue = new BigDecimal(loanreturnedbyfundTaAF
                    .getBorrow_ablncc()).subtract(new BigDecimal(
                    loanreturnedbyfundTaAF.getBorrow_monthpay())
                    .multiply(new BigDecimal(12)));
                if (moneyYue.intValue() > 0) {
                  moneyYue = moneyYue.setScale(2, BigDecimal.ROUND_DOWN);
                  loanreturnedbyfundTaAF.setMaxPickMoney(moneyYue);
                } else {
                  loanreturnedbyfundTaAF.setMaxPickMoney(new BigDecimal(0));
                }
                yue = loanreturnedbyfundTaAF.getMaxPickMoney().divide(
                    new BigDecimal(loanreturnedbyfundTaAF.getYueHuanBenXi()),
                    0, BigDecimal.ROUND_DOWN);
                if (yue.intValue() > 0) {
                  loanreturnedbyfundTaAF.setMaxMonth(yue.toString());
                } else {
                  loanreturnedbyfundTaAF.setMaxMonth("0");
                }
                loanreturnedbyfundTaAF.setMaxMonth_assist("0");
              } else {
                // 辅助借款人月提取最大金额
                if (loanreturnedbyfundTaAF.getBorrow_s_empid() != null
                    && !loanreturnedbyfundTaAF.getBorrow_s_empid().equals("")) {
                  moneyYue_s = new BigDecimal(loanreturnedbyfundTaAF
                      .getBorrow_s_ablncc()).subtract(new BigDecimal(
                      loanreturnedbyfundTaAF.getBorrow_s_monthpay())
                      .multiply(new BigDecimal(12)));
                  if (moneyYue_s.intValue() > 0) {
                    moneyYue_s = moneyYue_s.setScale(2, BigDecimal.ROUND_DOWN);
                    loanreturnedbyfundTaAF.setMaxPickMoney(moneyYue_s);
                  } else {
                    loanreturnedbyfundTaAF.setMaxPickMoney(new BigDecimal(0));
                  }
                  yue = loanreturnedbyfundTaAF.getMaxPickMoney().divide(
                      new BigDecimal(loanreturnedbyfundTaAF.getYueHuanBenXi()),
                      0, BigDecimal.ROUND_DOWN);
                  if (yue.intValue() > 0) {
                    loanreturnedbyfundTaAF.setMaxMonth(yue.toString());
                  } else {
                    loanreturnedbyfundTaAF.setMaxMonth("0");
                  }
                } else {
                  loanreturnedbyfundTaAF.setMaxPickMoney(new BigDecimal(0));
                  loanreturnedbyfundTaAF.setMaxMonth("0");
                }
              }
            }

            loanreturnedbyfundTaAF.setLoanMoney(borrowerAcc.getLoanMoney()
                .toString());
            loanreturnedbyfundTaAF.setLoanTime(borrowerAcc.getLoanTimeLimit());
            loanreturnedbyfundTaAF.setLoanYuE(borrowerAcc
                .getOverplusLoanMoney().toString());
            loanreturnedbyfundTaAF.setShengYuTime(borrowerAcc
                .getOverplusLimite());
            loanreturnedbyfundTaAF.setReturnMonth(loanreturnedbyfundBS.find(contractId));
          }
        }
      }
      request.getSession().setAttribute("loanreturnedbyfundTaAF",
          loanreturnedbyfundTaAF);
      request.setAttribute("loanreturnedbyfundTaAF", loanreturnedbyfundTaAF);

    } catch (Exception e) {
      messages = new ActionMessages();
      messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(e
          .getLocalizedMessage().toString(), false));
      saveErrors(request, messages);
      e.printStackTrace();

    }
    return mapping.findForward("to_showloanreturnedbyfundTa");

  }
}