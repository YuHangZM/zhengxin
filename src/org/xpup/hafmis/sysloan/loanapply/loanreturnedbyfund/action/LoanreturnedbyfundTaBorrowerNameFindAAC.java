/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.xpup.common.util.BSUtils;
import org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.bsinterface.ILoanreturnedbyfundBS;
import org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.dto.EmpinfoDto;
import org.xpup.hafmis.sysloan.loanapply.loanreturnedbyfund.form.LoanreturnedbyfundTaAF;

/**
 * MyEclipse Struts Creation date: 09-21-2007 XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class LoanreturnedbyfundTaBorrowerNameFindAAC extends Action {

  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    response.setContentType("text/html;charset=UTF-8");
    response.setHeader("Cache-Control", "no-cache");
    LoanreturnedbyfundTaAF af = null;
    try {
      af = (LoanreturnedbyfundTaAF) request.getSession().getAttribute(
          "loanreturnedbyfundTaAF");
      String borrowerEmpId = (String) request.getParameter("borrowerEmpId");
      String orgid = (String) request.getParameter("orgid");
      String again = (String) request.getParameter("again");
      String cardnum = af.getBorrower_cardNum();
      String name = af.getBorrowerName();
      String contractId = af.getContractId();
      String time = (String) request.getParameter("time");
      EmpinfoDto borrower = new EmpinfoDto();
      try {
        ILoanreturnedbyfundBS loanreturnedbyfundBS = (ILoanreturnedbyfundBS) BSUtils
            .getBusinessService("loanreturnedbyfundBS", this, mapping
                .getModuleConfig());
        String text = "";
        if(again!=null && again.equals("again")){
          borrower = loanreturnedbyfundBS.queryEmpInfo_yg(orgid, borrowerEmpId,
              name, cardnum);
        }else{
          borrower = loanreturnedbyfundBS.queryEmpInfo(orgid, borrowerEmpId,
              name, cardnum);
        }
        borrower.setEmpid(borrowerEmpId);
        borrower.setOrgid(orgid);
        text = "displays('" + contractId + "')";
        response.getWriter().write(text);
        response.getWriter().close();
        if (time != null) {
          request.getSession().setAttribute("time", time);
        }
        request.getSession().setAttribute("empinfoDto", borrower);
        request.getSession().setAttribute("contractId", contractId);
      } catch (Exception e) {
        String text = "";
        text = "display1('" + e.getLocalizedMessage().toString() + "')";
        response.getWriter().write(text);
        response.getWriter().close();
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
    return null;
  }
}