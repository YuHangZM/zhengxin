/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysfinance.accmng.subjectbalance.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.xpup.common.util.BSUtils;
import org.xpup.common.util.Pagination;
import org.xpup.common.util.PaginationUtils;
import org.xpup.hafmis.orgstrct.dto.OfficeDto;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.syscollection.paymng.monthpay.bsinterface.IMonthpayBS;
import org.xpup.hafmis.sysfinance.accmng.subjectbalance.bsinterface.ISubjectbalanceBS;
import org.xpup.hafmis.sysfinance.accmng.subjectbalance.form.SubjectbalanceAF;

/**
 * MyEclipse Struts Creation date: 11-02-2007 Copy Right Information : 科目余额表
 * Project : 文件名
 * 
 * @Version : 1.0
 * @author : 张列 生成日期 : 11-02-2007 XDoclet definition:
 * @struts.action validate="true"
 */
public class SubjectbalanceShowAC extends Action {

  public static final String PAGINATION_KEY = "org.xpup.hafmis.sysfinance.accmng.subjectbalance.action.SubjectbalanceShowAC";

  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    // TODO Auto-generated method stub
    String url = null;
    try {
      // 办事处放进 officeList 集合里
      List officeList1 = null;
      // url有值说明是从总账科目汇总表节点过来的
      url = (String) request.getSession().getAttribute("url");

      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");
      ISubjectbalanceBS subjectbalanceBS = (ISubjectbalanceBS) BSUtils
          .getBusinessService("subjectbalanceBS", this, mapping
              .getModuleConfig());
      String bookId = securityInfo.getBookId();
      // 取出用户权限办事处,显示在下拉菜单中
      List officeList = securityInfo.getOfficeList();
      officeList1 = new ArrayList();
      OfficeDto officedto = null;
      List totalList = new ArrayList();
      List list = new ArrayList(); // 分页的list
      Iterator itr1 = officeList.iterator();
      while (itr1.hasNext()) {
        officedto = (OfficeDto) itr1.next();
        officeList1.add(new org.apache.struts.util.LabelValueBean(officedto
            .getOfficeName(), officedto.getOfficeCode()));
      }
      request.setAttribute("officeList1", officeList1);
      // 取出科目级次，显示在下拉菜单中
      List paramValue1 = new ArrayList();
      int paramValue = Integer.parseInt(subjectbalanceBS
          .querySubjectbalanceParamValue(bookId));
      for (int i = 1; i <= paramValue; i++) {
        paramValue1.add(new org.apache.struts.util.LabelValueBean(i + "", i
            + ""));
      }
      Pagination pagination = (Pagination) request.getSession().getAttribute(
          SubjectbalanceShowAC.PAGINATION_KEY);
      if (pagination == null) {
        // 点节点过来的
        pagination = getPagination(PAGINATION_KEY, request);
      } else {
        PaginationUtils.updatePagination(pagination, request);
        String flag = (String) request.getAttribute("flag");
        System.out.println(url+"===========>");
        // 如果flag有值则说明点击过查询按钮则重新查询
        totalList = (List) request.getSession().getAttribute("totalList");
        if (totalList.isEmpty() || flag != null) {
          totalList = subjectbalanceBS.findSubjectbalanceInfo(pagination,
              securityInfo);
          request.getSession().setAttribute("totalList", totalList);
        }
        if (totalList.size() != 0) {
          int start = pagination.getFirstElementOnPage() - 1;
          int pageSize = pagination.getPageSize();
          if (start + pageSize > totalList.size()) {
            list = totalList.subList(start, totalList.size());
          } else {
            list = totalList.subList(start, start + pageSize);
          }
        }
      }
      if(url != null)
        paramValue = 1;
      request.setAttribute("paramValue1", paramValue1);
      
      request.setAttribute("subjectParamValue_zl", paramValue + "");
      request.getSession().setAttribute("totalList", totalList);
      request.setAttribute("list", list);
    } catch (Exception e) {
      e.printStackTrace();
    }
    if(url != null)
      return mapping.findForward("to_totalaccmuster_show");
    return mapping.findForward("to_subjectbalance_show");
  }

  private Pagination getPagination(String paginationKey,
      HttpServletRequest request) {
    Pagination pagination = (Pagination) request.getSession().getAttribute(
        paginationKey);
    if (pagination == null) {
      pagination = new Pagination(0, 10, 1, "", "DESC", new HashMap(0));
      request.getSession().setAttribute(PAGINATION_KEY, pagination);
    }

    return pagination;
  }
}