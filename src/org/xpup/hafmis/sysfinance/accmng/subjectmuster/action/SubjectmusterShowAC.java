/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysfinance.accmng.subjectmuster.action;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.xpup.common.util.BSUtils;
import org.xpup.hafmis.orgstrct.dto.OfficeDto;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysfinance.accmng.subjectmuster.bsinterface.ISubjectmusterBS;
import org.xpup.hafmis.sysfinance.accmng.subjectmuster.form.SubjectmusterAF;

/**
 * MyEclipse Struts Creation date: 11-06-2007 Copy Right Information : 凭证汇总
 * Project : 文件名
 * 
 * @Version : 1.0
 * @author : 张列 生成日期 : 11-06-2007 XDoclet definition:
 * @struts.action validate="true"
 */
public class SubjectmusterShowAC extends Action {
  /*
   * Generated Methods
   */

  /**
   * Method execute
   * 
   * @param mapping
   * @param form
   * @param request
   * @param response
   * @return ActionForward
   */
  public ActionForward execute(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    // TODO Auto-generated method stub
    try {
      // 办事处放进 officeList 集合里
      List officeList1 = null;
      ISubjectmusterBS subjectmusterBS = (ISubjectmusterBS) BSUtils
          .getBusinessService("subjectmusterBS", this, mapping
              .getModuleConfig());
      // 权限
      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");
      String bookId = securityInfo.getBookId();
      // 取出用户权限办事处,显示在下拉菜单中
      List officeList = securityInfo.getOfficeList();
      officeList1 = new ArrayList();
      OfficeDto officedto = null;
      List list = new ArrayList();
      Iterator itr1 = officeList.iterator();
      while (itr1.hasNext()) {
        officedto = (OfficeDto) itr1.next();
        officeList1.add(new org.apache.struts.util.LabelValueBean(officedto
            .getOfficeName(), officedto.getOfficeCode()));
      }
      request.setAttribute("officeList1", officeList1);

      // 取出科目级次，显示在下拉菜单中
      List paramValue1 = new ArrayList();
      int paramValue = Integer.parseInt(subjectmusterBS
          .querySubjectbalanceParamValue(bookId));
      for (int i = 1; i <= paramValue; i++) {
        paramValue1.add(new org.apache.struts.util.LabelValueBean(i + "", i
            + ""));
      }
      request.setAttribute("paramValue1", paramValue1);
      
      if (request.getAttribute("subjectmusterAF") != null) {
        SubjectmusterAF subjectmusterAF = (SubjectmusterAF) request
            .getAttribute("subjectmusterAF");
        String credenceDateYear = subjectmusterAF.getCredenceDateYear().trim();
        String credenceDateStartMonths = subjectmusterAF
            .getCredenceDateStartMonths().trim();
        String credenceDateEndMonths = subjectmusterAF
            .getCredenceDateEndMonths().trim();
        String credenceNumStart = subjectmusterAF.getCredenceNumStart().trim();
        String credenceNumEnd = subjectmusterAF.getCredenceNumEnd().trim();
        String officeName = subjectmusterAF.getOfficeName().trim();
        String subjectLevel = subjectmusterAF.getSubjectLevel().trim();
        if (credenceDateStartMonths.length() != 2) {
          credenceDateStartMonths = "0" + credenceDateStartMonths;
        }
        if (credenceDateEndMonths.length() != 2) {
          credenceDateEndMonths = "0" + credenceDateEndMonths;
        }
 
        String credenceDateStart = credenceDateYear + credenceDateStartMonths;        
        String credenceDateEnd = credenceDateYear + credenceDateEndMonths;
        if (officeName.equals("全部")) {
          officeName = "";
        }
        String userName="";
        try {
          String name = subjectmusterBS.getNamePara();

          if (name.equals("1")) {
            userName = securityInfo.getUserName();
          } else {
            userName = securityInfo.getRealName();
          }

        } catch (Exception e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
        SubjectmusterAF subjectmusterAF1 = new SubjectmusterAF();
        request.setAttribute("subjectmusterAF", subjectmusterAF1);
        request.setAttribute("credenceDateYearMonth", "汇总年月"+"   "+credenceDateYear+credenceDateStartMonths);
        request.setAttribute("credenceNum", "汇总凭证范围 从"+credenceNumStart+"号 至 "+credenceNumEnd+"号 共 "+String.valueOf(Integer.parseInt(credenceNumEnd)-Integer.parseInt(credenceNumStart)+1)+" 张");
        request.setAttribute("userName", "营口市住房公积金管理中心                                制表人："+userName);
        // 根据条件 返回科目余额表信息
        list = subjectmusterBS.findSubjectmusterInfo(bookId, credenceDateStart,
            credenceDateEnd, officeName, credenceNumStart, credenceNumEnd, subjectLevel, securityInfo);
      }

      request.setAttribute("lists", list);

    } catch (Exception e) {
      e.printStackTrace();
    }
    return mapping.findForward("to_subjectmuster_show");
  }
}