/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.xpup.hafmis.sysfinance.bookmng.summary.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.actions.DispatchAction;
import org.xpup.common.util.BSUtils;
import org.xpup.hafmis.orgstrct.dto.SecurityInfo;
import org.xpup.hafmis.sysfinance.bookmng.summary.bsinterface.ISummaryBS;
import org.xpup.hafmis.sysfinance.bookmng.summary.dto.SummaryDTO;
import org.xpup.hafmis.sysfinance.bookmng.summary.form.SummaryNewAF;

/** 
 * MyEclipse Struts
 * Creation date: 10-25-2007
 * Copy Right Information   : 常用摘要
 * Project                  : 文件名
 * @Version                 : 1.0
 * @author                  : 张列
 * 生成日期                   : 10-25-2007
 * XDoclet definition:
 * @struts.action path="/summaryNewAC" name="settlemodleNewAF" parameter="method" scope="request" validate="true"
 */
public class SummaryNewAC extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward save(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
    try {
      SummaryNewAF SummaryNewAF = (SummaryNewAF) form;// TODO Auto-generated method stub
      //权限
      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");
      //bookId
      String bookId = securityInfo.getBookId();
      String paramExplain = SummaryNewAF.getParamExplain().trim();
      SummaryDTO summaryDTO = new SummaryDTO();
      summaryDTO.setBookId(bookId);
      summaryDTO.setParamExplain(paramExplain);
      summaryDTO.setParamExplainPY(request.getParameter("pinyin").trim());
      ISummaryBS summaryBS = (ISummaryBS) BSUtils.getBusinessService(
          "summaryBS", this, mapping.getModuleConfig());
      //断输入的常用摘要在FN102.PARAM_NUM=4的记录的PARAM_EXPLAIN是否存在
      boolean temp_paramExplain = summaryBS.is_SummaryParamExplainInsert(summaryDTO);
      if(temp_paramExplain){
        //没有记录  插入FN311 ,FN102
        summaryBS.insertSummaryInfo(summaryDTO, securityInfo);
      }else{
        //有记录
        ActionMessages messages = new ActionMessages();
        messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("该结算方式已存在!",
            false));
        saveErrors(request, messages);
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
		return mapping.findForward("summaryShowAC");
	}
  
  public ActionForward update(ActionMapping mapping, ActionForm form,
      HttpServletRequest request, HttpServletResponse response) {
    try {
      SummaryNewAF summaryNewAF = (SummaryNewAF) form;// TODO Auto-generated method stub
      //权限
      SecurityInfo securityInfo = (SecurityInfo) request.getSession()
          .getAttribute("SecurityInfo");
      //bookId
      String bookId = securityInfo.getBookId();
      String paraId = summaryNewAF.getParaId().trim();
      String paramExplain = summaryNewAF.getParamExplain().trim();
      SummaryDTO summaryDTO = new SummaryDTO();
      summaryDTO.setBookId(bookId);
      summaryDTO.setParaId(paraId);
      summaryDTO.setParamExplain(paramExplain);
      summaryDTO.setParamExplainPY(request.getParameter("pinyin").trim());
      ISummaryBS summaryBS = (ISummaryBS) BSUtils.getBusinessService(
          "summaryBS", this, mapping.getModuleConfig());
      //根据ID判断记录是否存在
      boolean temp_isSummary = summaryBS.isSummaryById(paraId);
      if(!temp_isSummary){
        ActionMessages messages = new ActionMessages();
        messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("该记录不存在,不能修改!",
            false));
        saveErrors(request, messages);
        return mapping.findForward("summaryShowAC");
      }
      //判断输入的常用摘要在FN102.PARAM_NUM=4的记录的PARAM_EXPLAIN是否存在
      boolean temp_paramExplain = summaryBS.is_SummaryParamExplainUpdate(summaryDTO);
      if(temp_paramExplain){
        //没有记录  插入FN311 ,更新FN102
        summaryBS.updateSummaryInfo(summaryDTO, securityInfo);
      }else{
        //有记录
        ActionMessages messages = new ActionMessages();
        messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("该摘要名称已存在!",
            false));
        saveErrors(request, messages);
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
    return mapping.findForward("summaryShowAC");
  }
}